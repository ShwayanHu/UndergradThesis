{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "126ec4d6",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import statsmodels.api as sm\n",
    "import sys\n",
    "sys.path.append('/Users/yanyan/Documents/MyQuant/MarketSeparationBasedOnNLP/Code/Experiment/Evaluation')\n",
    "from Evaluation import *\n",
    "import jieba\n",
    "from gensim.models.doc2vec import Doc2Vec, TaggedDocument\n",
    "import logging\n",
    "from gensim.test.utils import get_tmpfile\n",
    "from sklearn.manifold import SpectralEmbedding, Isomap, MDS, TSNE\n",
    "from scipy.stats import ks_2samp\n",
    "logging.basicConfig(format='%(asctime)s : %(levelname)s : %(message)s', level=logging.INFO)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "3649860e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "正在使用Resset数据...Resset数据加载完成。时间：0.6413209438323975\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "遍历每个股票求解因子载荷: 100%|██████████| 4996/4996 [03:02<00:00, 27.36it/s]\n"
     ]
    }
   ],
   "source": [
    "evaluator = Evaluation()\n",
    "evaluator.PortfolioAnalysis(labels=evaluator.factorNameList, n=3, excess_ret='月收益率_Monret', date='datetime64', weights=['月总市值(元)_Monmc'])\n",
    "\n",
    "def preprocess_MSVARresult(path:str):\n",
    "    res = (pd.read_csv(path)\n",
    "               .assign(separation=lambda x: x[['colMeans.states.']].applymap(lambda x: round(x)))\n",
    "               .assign(index= lambda x: concat_year_and_month(x))\n",
    "               .pipe(lambda x: x[['separation','index']])\n",
    "               .set_index('index')\n",
    "               .rename(columns={'separation':'0'})\n",
    "               )\n",
    "    return res"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c6c1c3b6",
   "metadata": {},
   "source": [
    "## 寻找状态对应的重点事件"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "6f9957b2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>datetime64</th>\n",
       "      <th>general</th>\n",
       "      <th>InfoLevel1</th>\n",
       "      <th>InfoLevel2</th>\n",
       "      <th>InfoLevel3</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2007-12-31</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2007</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2008-01-31</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2008</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2008-02-29</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2008</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2008-03-31</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2008</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2008-04-30</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2008</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  datetime64  general  InfoLevel1  InfoLevel2  InfoLevel3  Year  Month\n",
       "0 2007-12-31      2.0         1.0         2.0         1.0  2007     12\n",
       "1 2008-01-31      2.0         1.0         2.0         2.0  2008      1\n",
       "2 2008-02-29      2.0         1.0         2.0         2.0  2008      2\n",
       "3 2008-03-31      2.0         1.0         2.0         2.0  2008      3\n",
       "4 2008-04-30      2.0         1.0         2.0         2.0  2008      4"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>datetime64</th>\n",
       "      <th>general</th>\n",
       "      <th>InfoLevel1</th>\n",
       "      <th>InfoLevel2</th>\n",
       "      <th>InfoLevel3</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>2023-01-31</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>182</th>\n",
       "      <td>2023-02-28</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>2023-03-31</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>184</th>\n",
       "      <td>2023-04-30</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>185</th>\n",
       "      <td>2023-05-31</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2023</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    datetime64  general  InfoLevel1  InfoLevel2  InfoLevel3  Year  Month\n",
       "181 2023-01-31      1.0         1.0         1.0         1.0  2023      1\n",
       "182 2023-02-28      1.0         2.0         1.0         1.0  2023      2\n",
       "183 2023-03-31      1.0         2.0         1.0         1.0  2023      3\n",
       "184 2023-04-30      1.0         2.0         1.0         1.0  2023      4\n",
       "185 2023-05-31      1.0         2.0         1.0         1.0  2023      5"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# general 状态\n",
    "state_general = preprocess_MSVARresult('/Users/yanyan/Documents/MyQuant/MarketSeparationBasedOnNLP/Code（毕业论文）/Data/MSVAR检验/检验结果/States_DocVec_monthly_20240207_cutted.csv')\n",
    "evaluator.addResult(state_general)\n",
    "state_general = evaluator.PAresult['separation']\n",
    "\n",
    "# InfoLevel1 状态\n",
    "state_InfoLevel1 = preprocess_MSVARresult('/Users/yanyan/Documents/MyQuant/MarketSeparationBasedOnNLP/Code（毕业论文）/Data/MSVAR检验/检验结果/States_DocVec_monthly_InfoLevel1_20240207_cutted.csv')\n",
    "evaluator.addResult(state_InfoLevel1)\n",
    "state_InfoLevel1 = evaluator.PAresult['separation']\n",
    "\n",
    "# InfoLevel2 状态\n",
    "state_InfoLevel2 = preprocess_MSVARresult('/Users/yanyan/Documents/MyQuant/MarketSeparationBasedOnNLP/Code（毕业论文）/Data/MSVAR检验/检验结果/States_DocVec_monthly_InfoLevel2_20240207_cutted.csv')\n",
    "evaluator.addResult(state_InfoLevel2)\n",
    "state_InfoLevel2 = evaluator.PAresult['separation']\n",
    "\n",
    "# InfoLevel3 状态\n",
    "state_InfoLevel3 = preprocess_MSVARresult('/Users/yanyan/Documents/MyQuant/MarketSeparationBasedOnNLP/Code（毕业论文）/Data/MSVAR检验/检验结果/States_DocVec_monthly_InfoLevel3_20240207_cutted.csv')\n",
    "evaluator.addResult(state_InfoLevel3)\n",
    "state_InfoLevel3 = evaluator.PAresult['separation']\n",
    "\n",
    "# InfoLevel4 状态\n",
    "# state_InfoLevel4 = preprocess_MSVARresult('/Users/yanyan/Documents/MyQuant/MarketSeparationBasedOnNLP/Code（毕业论文）/Data/MSVAR检验/检验结果/States_DocVec_monthly_InfoLevel4_20240207_cutted.csv')\n",
    "# evaluator.addResult(state_InfoLevel4)\n",
    "# state_InfoLevel4 = evaluator.PAresult['separation']\n",
    "\n",
    "states = pd.concat(\n",
    "    {\n",
    "        'general':state_general,\n",
    "        'InfoLevel1':state_InfoLevel1,\n",
    "        'InfoLevel2':state_InfoLevel2,\n",
    "        'InfoLevel3':state_InfoLevel3,\n",
    "#         'InfoLevel4':state_InfoLevel4,\n",
    "    },\n",
    "    axis=1\n",
    ")\n",
    "states = (\n",
    "    states.dropna()\n",
    "    .reset_index()\n",
    "    .assign(Year=lambda x: x[['datetime64']].applymap(lambda y: y.year))\n",
    "    .assign(Month=lambda x: x[['datetime64']].applymap(lambda y: y.month))\n",
    ")\n",
    "display(states.head())\n",
    "display(states.tail())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "84fa4635",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/7l/j9np0sbx1b33249mt44v25980000gn/T/ipykernel_76121/3341553966.py:19: MatplotlibDeprecationWarning: Auto-removal of overlapping axes is deprecated since 3.6 and will be removed two minor releases later; explicitly call ax.remove() as needed.\n",
      "  plt.subplot(411)\n",
      "/var/folders/7l/j9np0sbx1b33249mt44v25980000gn/T/ipykernel_76121/3341553966.py:25: MatplotlibDeprecationWarning: Auto-removal of overlapping axes is deprecated since 3.6 and will be removed two minor releases later; explicitly call ax.remove() as needed.\n",
      "  plt.subplot(412)\n",
      "/var/folders/7l/j9np0sbx1b33249mt44v25980000gn/T/ipykernel_76121/3341553966.py:30: MatplotlibDeprecationWarning: Auto-removal of overlapping axes is deprecated since 3.6 and will be removed two minor releases later; explicitly call ax.remove() as needed.\n",
      "  plt.subplot(413)\n",
      "/var/folders/7l/j9np0sbx1b33249mt44v25980000gn/T/ipykernel_76121/3341553966.py:35: MatplotlibDeprecationWarning: Auto-removal of overlapping axes is deprecated since 3.6 and will be removed two minor releases later; explicitly call ax.remove() as needed.\n",
      "  plt.subplot(414)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, '时间')"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2000x1000 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "colors={\n",
    "    'general':'#c24e3d',\n",
    "    'InfoLevel1':'#7b5347',\n",
    "    'InfoLevel2':'#35180e',\n",
    "    'InfoLevel3':'#cb8d79',\n",
    "#     'InfoLevel4':'#fad4ca',\n",
    "}\n",
    "\n",
    "labels={\n",
    "    'general':'全部政策',\n",
    "    'InfoLevel1':'一级政策',\n",
    "    'InfoLevel2':'二级政策',\n",
    "    'InfoLevel3':'三级政策',\n",
    "#     'InfoLevel4':'四级政策',\n",
    "}\n",
    "\n",
    "fig, ax = plt.subplots(5,1, figsize=(20,10), sharex=True)\n",
    "\n",
    "plt.subplot(411)\n",
    "plt.scatter(states['datetime64'], states['general'], color=colors['general'],label=labels['general'])\n",
    "plt.legend()\n",
    "plt.ylabel('市场状态')\n",
    "\n",
    "\n",
    "plt.subplot(412)\n",
    "plt.scatter(states['datetime64'], states['InfoLevel1'], color=colors['InfoLevel1'],label=labels['InfoLevel1'])\n",
    "plt.legend()\n",
    "plt.ylabel('市场状态')\n",
    "\n",
    "plt.subplot(413)\n",
    "plt.scatter(states['datetime64'], states['InfoLevel2'], color=colors['InfoLevel2'],label=labels['InfoLevel2'])\n",
    "plt.legend()\n",
    "plt.ylabel('市场状态')\n",
    "\n",
    "plt.subplot(414)\n",
    "plt.scatter(states['datetime64'], states['InfoLevel3'], color=colors['InfoLevel3'],label=labels['InfoLevel3'])\n",
    "plt.legend()\n",
    "plt.ylabel('市场状态')\n",
    "\n",
    "# plt.subplot(515)\n",
    "# plt.scatter(states['datetime64'], states['InfoLevel4'], color=colors['InfoLevel4'],label=labels['InfoLevel4'])\n",
    "# plt.legend()\n",
    "# plt.ylabel('市场状态')\n",
    "plt.xlabel('时间')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "fce6b30e",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22497/22497 [00:39<00:00, 575.89it/s]\n",
      "2024-03-29 10:06:16,047 : INFO : loading Doc2Vec object from /Users/yanyan/Documents/MyQuant/MarketSeparationBasedOnNLP/Code（毕业论文）/Data/my_doc2vec_model\n",
      "2024-03-29 10:06:16,085 : INFO : loading dv recursively from /Users/yanyan/Documents/MyQuant/MarketSeparationBasedOnNLP/Code（毕业论文）/Data/my_doc2vec_model.dv.* with mmap=None\n",
      "2024-03-29 10:06:16,085 : INFO : loading wv recursively from /Users/yanyan/Documents/MyQuant/MarketSeparationBasedOnNLP/Code（毕业论文）/Data/my_doc2vec_model.wv.* with mmap=None\n",
      "2024-03-29 10:06:16,086 : INFO : setting ignored attribute cum_table to None\n",
      "2024-03-29 10:06:16,494 : INFO : Doc2Vec lifecycle event {'fname': '/Users/yanyan/Documents/MyQuant/MarketSeparationBasedOnNLP/Code（毕业论文）/Data/my_doc2vec_model', 'datetime': '2024-03-29T10:06:16.494516', 'gensim': '4.3.0', 'python': '3.10.12 (main, Jul  5 2023, 15:02:25) [Clang 14.0.6 ]', 'platform': 'macOS-14.2.1-arm64-arm-64bit', 'event': 'loaded'}\n",
      "计算doc对应的向量: 100%|██████████| 22497/22497 [00:59<00:00, 380.24it/s]\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>观测ID()_ID</th>\n",
       "      <th>事件标志_EventFlg</th>\n",
       "      <th>信息发布日期_InfoPubDt</th>\n",
       "      <th>媒体出处代码()_MediaCd</th>\n",
       "      <th>媒体出处_Media</th>\n",
       "      <th>撰写机构_Writer</th>\n",
       "      <th>作者_Author</th>\n",
       "      <th>信息内容_Content</th>\n",
       "      <th>信息对象代码()_ObjCd</th>\n",
       "      <th>信息地域划分代码()_RegionCd</th>\n",
       "      <th>...</th>\n",
       "      <th>MediaCode</th>\n",
       "      <th>Writer</th>\n",
       "      <th>Author</th>\n",
       "      <th>InfoTitle</th>\n",
       "      <th>Content</th>\n",
       "      <th>InfoPublDateNP</th>\n",
       "      <th>TokenContent</th>\n",
       "      <th>DocVec</th>\n",
       "      <th>InfoPublYear</th>\n",
       "      <th>InfoPublMon</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>670676730611</td>\n",
       "      <td>1</td>\n",
       "      <td>2021-04-02</td>\n",
       "      <td>3</td>\n",
       "      <td>上海证券报</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1000</td>\n",
       "      <td>142.0</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>权益变动信息 披露知多少</td>\n",
       "      <td>小费阿姨：小钟老师，近期我关注的上市公司发布了临时公告，是关于大股东持有公司权益变动...</td>\n",
       "      <td>2021-04-02</td>\n",
       "      <td>[小费, 阿姨, 小钟, 老师, 近期, 关注, 上市, 公司, 上市公司, 发布, 临时,...</td>\n",
       "      <td>[1.8189353, -0.99140006, -0.91159874, 0.259773...</td>\n",
       "      <td>2021</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1 rows × 34 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      观测ID()_ID  事件标志_EventFlg 信息发布日期_InfoPubDt  媒体出处代码()_MediaCd 媒体出处_Media  \\\n",
       "0  670676730611              1       2021-04-02                 3      上海证券报   \n",
       "\n",
       "  撰写机构_Writer 作者_Author  信息内容_Content  信息对象代码()_ObjCd  信息地域划分代码()_RegionCd  \\\n",
       "0         NaN       NaN           NaN            1000                142.0   \n",
       "\n",
       "   ...  MediaCode Writer  Author     InfoTitle  \\\n",
       "0  ...          3    NaN     NaN  权益变动信息 披露知多少   \n",
       "\n",
       "                                             Content  InfoPublDateNP  \\\n",
       "0      小费阿姨：小钟老师，近期我关注的上市公司发布了临时公告，是关于大股东持有公司权益变动...      2021-04-02   \n",
       "\n",
       "                                        TokenContent  \\\n",
       "0  [小费, 阿姨, 小钟, 老师, 近期, 关注, 上市, 公司, 上市公司, 发布, 临时,...   \n",
       "\n",
       "                                              DocVec InfoPublYear InfoPublMon  \n",
       "0  [1.8189353, -0.99140006, -0.91159874, 0.259773...         2021           4  \n",
       "\n",
       "[1 rows x 34 columns]"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def tokenize_and_del_stopword(stopword_set, text: pd.Series):\n",
    "    raw_texts = text.to_list()\n",
    "    res = []\n",
    "    for raw_text in tqdm(raw_texts):\n",
    "        tokenized_text = jieba.lcut_for_search(raw_text)\n",
    "        temp = []\n",
    "        for word in tokenized_text:\n",
    "            if not word in stopword_set:\n",
    "                temp.append(word)\n",
    "        res.append(temp)\n",
    "    return res\n",
    "\n",
    "stopwords = []\n",
    "with open(\"/Users/yanyan/Documents/MyQuant/MarketSeparationBasedOnNLP/Code（毕业论文）/Data/baidu_stopwords.txt\", \"r\") as f:\n",
    "    for line in f.readlines():\n",
    "        line = line.strip('\\n')  # 去掉列表中每一个元素的换行符\n",
    "        stopwords.append(line)\n",
    "stopwords = set(stopwords)\n",
    "\n",
    "Industry_policy = (\n",
    "    pd.read_csv('/Users/yanyan/Documents/MyQuant/MarketSeparationBasedOnNLP/Code（毕业论文）/Data/行业政策/ED_IndustryPolicy.csv')\n",
    "    .pipe(lambda x: pd.merge(pd.read_csv('/Users/yanyan/Documents/MyQuant/MarketSeparationBasedOnNLP/Code（毕业论文）/Data/RESSET_INDPOLICY_1.csv'), x, left_on='观测ID()_ID', right_on='ID'))\n",
    "    .assign(InfoPublDateNP=lambda x: x[['InfoPublDate']].applymap(lambda x: np.datetime64(x)))\n",
    "    .assign(TokenContent=lambda x: tokenize_and_del_stopword(stopwords, x['Content']))\n",
    "    )\n",
    "\n",
    "documents = [TaggedDocument(doc, [i]) for i, doc in enumerate(Industry_policy['TokenContent'])]\n",
    "# model = Doc2Vec(documents, vector_size=10, window=4, min_count=1, workers=4)\n",
    "fname = get_tmpfile(\"/Users/yanyan/Documents/MyQuant/MarketSeparationBasedOnNLP/Code（毕业论文）/Data/my_doc2vec_model\")\n",
    "# model.save(fname)\n",
    "model = Doc2Vec.load(fname)  # you can continue training with the loaded model!\n",
    "\n",
    "# 计算每一个doc的向量\n",
    "temp_doc = []\n",
    "for doc in tqdm(Industry_policy['TokenContent'], desc='计算doc对应的向量'):\n",
    "    temp_doc.append(model.infer_vector(doc))\n",
    "\n",
    "Industry_policy = (\n",
    "    Industry_policy\n",
    "    .assign(DocVec = temp_doc)\n",
    "    .assign(InfoPublYear = lambda x: x[['InfoPublDateNP']].applymap(lambda x: x.year))\n",
    "    .assign(InfoPublMon = lambda x: x[['InfoPublDateNP']].applymap(lambda x: x.month))\n",
    "    .assign(DocVec = temp_doc)\n",
    "    .pipe(lambda x: x.loc[x['信息级别_InfoLevel']<=3])\n",
    "    )\n",
    "Industry_policy.head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "64d5865c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['观测ID()_ID', '事件标志_EventFlg', '信息发布日期_InfoPubDt', '媒体出处代码()_MediaCd',\n",
      "       '媒体出处_Media', '撰写机构_Writer', '作者_Author', '信息内容_Content',\n",
      "       '信息对象代码()_ObjCd', '信息地域划分代码()_RegionCd', '涉及机构编码_InvInsCd',\n",
      "       '涉及机构名称_InvInsNm', '信息级别_InfoLevel', '省市编码_ProvNum', '省市名称_Prov',\n",
      "       '行业编码_IndNum', '行业板块_IndPla', '行业代码_IndCd', '行业名称_IndNm', '记录时间_RecDt',\n",
      "       'Unnamed: 20', 'ID', 'InfoPublDate', 'Media', 'MediaCode', 'Writer',\n",
      "       'Author', 'InfoTitle', 'Content', 'InfoPublDateNP', 'TokenContent',\n",
      "       'DocVec', 'InfoPublYear', 'InfoPublMon'],\n",
      "      dtype='object')\n"
     ]
    }
   ],
   "source": [
    "print(Industry_policy.columns)\n",
    "# Industry_policy.loc[(Industry_policy['InfoPublYear']==2008) & (Industry_policy['InfoPublMon']==12)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "8eab6d9c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['datetime64', 'general', 'InfoLevel1', 'InfoLevel2', 'InfoLevel3',\n",
      "       'Year', 'Month', '观测ID()_ID', '事件标志_EventFlg', '信息发布日期_InfoPubDt',\n",
      "       '媒体出处代码()_MediaCd', '媒体出处_Media', '撰写机构_Writer', '作者_Author',\n",
      "       '信息内容_Content', '信息对象代码()_ObjCd', '信息地域划分代码()_RegionCd',\n",
      "       '涉及机构编码_InvInsCd', '涉及机构名称_InvInsNm', '信息级别_InfoLevel', '省市编码_ProvNum',\n",
      "       '省市名称_Prov', '行业编码_IndNum', '行业板块_IndPla', '行业代码_IndCd', '行业名称_IndNm',\n",
      "       '记录时间_RecDt', 'Unnamed: 20', 'ID', 'InfoPublDate', 'Media', 'MediaCode',\n",
      "       'Writer', 'Author', 'InfoTitle', 'Content', 'InfoPublDateNP',\n",
      "       'TokenContent', 'DocVec', 'InfoPublYear', 'InfoPublMon'],\n",
      "      dtype='object')\n",
      "17048\n"
     ]
    }
   ],
   "source": [
    "policy_and_states = pd.merge(states, Industry_policy, left_on=['Year','Month'], right_on=['InfoPublYear','InfoPublMon'])\n",
    "print(policy_and_states.columns,end='\\n')\n",
    "print(len(policy_and_states))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "68c08e44",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "datetime64   2007-12-31\n",
      "Name: 0, dtype: datetime64[ns]\n",
      "datetime64   2023-05-31\n",
      "Name: 17047, dtype: datetime64[ns]\n"
     ]
    }
   ],
   "source": [
    "print(policy_and_states[['datetime64']].sort_values(by='datetime64').iloc[0])\n",
    "print(policy_and_states[['datetime64']].sort_values(by='datetime64').iloc[-1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "12876682",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>信息级别_InfoLevel</th>\n",
       "      <th>datetime64</th>\n",
       "      <th>InfoLevel1</th>\n",
       "      <th>InfoLevel2</th>\n",
       "      <th>InfoLevel3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2007-12-31</td>\n",
       "      <td>35.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2008-01-31</td>\n",
       "      <td>39.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2008-02-29</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2008-03-31</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2008-04-30</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "信息级别_InfoLevel datetime64  InfoLevel1  InfoLevel2  InfoLevel3\n",
       "0              2007-12-31        35.0         5.0         2.0\n",
       "1              2008-01-31        39.0         1.0         1.0\n",
       "2              2008-02-29        10.0         0.0         2.0\n",
       "3              2008-03-31         7.0         0.0         1.0\n",
       "4              2008-04-30         7.0         0.0         2.0"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "temp = policy_and_states.groupby(['datetime64','信息级别_InfoLevel'])[['DocVec']].count().reset_index()\n",
    "temp = temp.pivot_table(index='datetime64',columns='信息级别_InfoLevel', values='DocVec')\n",
    "temp = temp.reset_index()\n",
    "temp.fillna(0, inplace=True)\n",
    "temp.rename(columns={\n",
    "    1:'InfoLevel1',\n",
    "    2:'InfoLevel2',\n",
    "    3:'InfoLevel3',\n",
    "#     4:'InfoLevel4',\n",
    "}, inplace=True)\n",
    "display(temp.head())\n",
    "\n",
    "# data from United Nations World Population Prospects (Revision 2019)\n",
    "# https://population.un.org/wpp/, license: CC BY 3.0 IGO\n",
    "\n",
    "year = temp['datetime64'].values\n",
    "# data_dict = temp[['InfoLevel1', 'InfoLevel2', 'InfoLevel3',\n",
    "#        'InfoLevel4']].to_dict()\n",
    "data_dict = temp[['InfoLevel1', 'InfoLevel2', 'InfoLevel3']].to_dict()\n",
    "data = {key:list(value.values()) for key, value in data_dict.items()}\n",
    "# print(data)\n",
    "# print(population_by_continent)\n",
    "\n",
    "fig, ax = plt.subplots(figsize=(10,5))\n",
    "ax.stackplot(year, data.values(),\n",
    "             labels=data.keys(), alpha=0.8,\n",
    "             colors=['#7b5347','#35180e','#cb8d79','#fad4ca']\n",
    "            )\n",
    "ax.legend(loc='upper left', reverse=True)\n",
    "ax.set_xlabel('日期')\n",
    "ax.grid(True)\n",
    "ax.set_ylabel('政策数量（条）')\n",
    "# plt.savefig('/Users/yanyan/Downloads/政策数量堆积图', dpi=350)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b02bc1d0",
   "metadata": {},
   "source": [
    "### 直观分析行业是否受到影响\n",
    "使用“信息级别”识别出来的市场状态是否能影响各个行业？\n",
    "1. 通过不同状态的行业收益率的散点图看出:\n",
    "    1. 不同状态的收益率方差存在差异\n",
    "    2. 市场状态转换附近的收益率方差比状态中间的方差更小\n",
    "        例如，以下行业和信息级别较为明显：\n",
    "        ```\n",
    "        ind = 'M'; state='InfoLevel1'\n",
    "        ind = 'M'; state='InfoLevel4'\n",
    "        ind = 'N'; state='InfoLevel4'\n",
    "        ind = 'E'; state='general'\n",
    "        , and so forth....\n",
    "        ```\n",
    "2. 检验信息级别对于全行业是否有影响：\n",
    "    \n",
    "   方法：固定信息级别，按照状态1和状态2把各行业的收益率方差分组，使用KS检验方差分布\n",
    "   \n",
    "   结果：InfoLevel1和InfoLevel3的政策文本识别出来的市场状态的分布差异明显\n",
    "\n",
    "3. 检验在市场状态切换时，波动率是否有明显降低\n",
    "   \n",
    "   方法：使用日度数据计算各个行业的波动率，观察状态转换前后的波动率的平均值\n",
    "   \n",
    "   结果：发现在市场状态转换的时候，波动率明显下降；在转换之前和之后波动率更高。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "4ab30ace",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>A</th>\n",
       "      <th>B</th>\n",
       "      <th>C</th>\n",
       "      <th>D</th>\n",
       "      <th>E</th>\n",
       "      <th>F</th>\n",
       "      <th>G</th>\n",
       "      <th>H</th>\n",
       "      <th>...</th>\n",
       "      <th>O</th>\n",
       "      <th>P</th>\n",
       "      <th>Q</th>\n",
       "      <th>R</th>\n",
       "      <th>S</th>\n",
       "      <th>datetime64</th>\n",
       "      <th>general</th>\n",
       "      <th>InfoLevel1</th>\n",
       "      <th>InfoLevel2</th>\n",
       "      <th>InfoLevel3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2007</td>\n",
       "      <td>12</td>\n",
       "      <td>0.2447</td>\n",
       "      <td>0.1017</td>\n",
       "      <td>0.2118</td>\n",
       "      <td>0.1746</td>\n",
       "      <td>0.1938</td>\n",
       "      <td>0.1983</td>\n",
       "      <td>0.1527</td>\n",
       "      <td>0.1787</td>\n",
       "      <td>...</td>\n",
       "      <td>0.5875</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.2625</td>\n",
       "      <td>0.1759</td>\n",
       "      <td>2007-12-31</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2008</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0584</td>\n",
       "      <td>-0.1628</td>\n",
       "      <td>-0.0823</td>\n",
       "      <td>-0.1518</td>\n",
       "      <td>-0.1185</td>\n",
       "      <td>-0.0967</td>\n",
       "      <td>-0.1510</td>\n",
       "      <td>-0.1216</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.1790</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.1041</td>\n",
       "      <td>-0.0600</td>\n",
       "      <td>2008-01-31</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2008</td>\n",
       "      <td>2</td>\n",
       "      <td>0.1328</td>\n",
       "      <td>-0.0247</td>\n",
       "      <td>0.0567</td>\n",
       "      <td>0.0641</td>\n",
       "      <td>0.0543</td>\n",
       "      <td>0.0770</td>\n",
       "      <td>0.0333</td>\n",
       "      <td>0.0769</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0121</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0913</td>\n",
       "      <td>0.0793</td>\n",
       "      <td>2008-02-29</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2008</td>\n",
       "      <td>3</td>\n",
       "      <td>-0.2071</td>\n",
       "      <td>-0.2226</td>\n",
       "      <td>-0.2139</td>\n",
       "      <td>-0.2169</td>\n",
       "      <td>-0.2267</td>\n",
       "      <td>-0.2101</td>\n",
       "      <td>-0.1957</td>\n",
       "      <td>-0.1710</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.2486</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.2808</td>\n",
       "      <td>-0.1963</td>\n",
       "      <td>2008-03-31</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2008</td>\n",
       "      <td>4</td>\n",
       "      <td>0.0775</td>\n",
       "      <td>0.0952</td>\n",
       "      <td>-0.0128</td>\n",
       "      <td>-0.0317</td>\n",
       "      <td>-0.0113</td>\n",
       "      <td>0.0083</td>\n",
       "      <td>0.0071</td>\n",
       "      <td>-0.0695</td>\n",
       "      <td>...</td>\n",
       "      <td>0.1666</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0881</td>\n",
       "      <td>-0.0517</td>\n",
       "      <td>2008-04-30</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Year  Month       A       B       C       D       E       F       G  \\\n",
       "0  2007     12  0.2447  0.1017  0.2118  0.1746  0.1938  0.1983  0.1527   \n",
       "1  2008      1  0.0584 -0.1628 -0.0823 -0.1518 -0.1185 -0.0967 -0.1510   \n",
       "2  2008      2  0.1328 -0.0247  0.0567  0.0641  0.0543  0.0770  0.0333   \n",
       "3  2008      3 -0.2071 -0.2226 -0.2139 -0.2169 -0.2267 -0.2101 -0.1957   \n",
       "4  2008      4  0.0775  0.0952 -0.0128 -0.0317 -0.0113  0.0083  0.0071   \n",
       "\n",
       "        H  ...       O   P   Q       R       S  datetime64  general  \\\n",
       "0  0.1787  ...  0.5875 NaN NaN  0.2625  0.1759  2007-12-31      2.0   \n",
       "1 -0.1216  ... -0.1790 NaN NaN -0.1041 -0.0600  2008-01-31      2.0   \n",
       "2  0.0769  ...  0.0121 NaN NaN  0.0913  0.0793  2008-02-29      2.0   \n",
       "3 -0.1710  ... -0.2486 NaN NaN -0.2808 -0.1963  2008-03-31      2.0   \n",
       "4 -0.0695  ...  0.1666 NaN NaN  0.0881 -0.0517  2008-04-30      2.0   \n",
       "\n",
       "   InfoLevel1  InfoLevel2  InfoLevel3  \n",
       "0         1.0         2.0         1.0  \n",
       "1         1.0         2.0         2.0  \n",
       "2         1.0         2.0         2.0  \n",
       "3         1.0         2.0         2.0  \n",
       "4         1.0         2.0         2.0  \n",
       "\n",
       "[5 rows x 26 columns]"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "industry_return = (pd.read_csv('/Users/yanyan/Documents/MyQuant/MarketSeparationBasedOnNLP/Code（毕业论文）/Data/行业月收益率_流通市值加权.csv',usecols=[0,1,2])\n",
    "                   .assign(Date_np = lambda x: x[['日期_Date']].applymap(lambda x: np.datetime64(x)))\n",
    "                   .assign(Year = lambda x: x[['Date_np']].applymap(lambda x: x.year))\n",
    "                   .assign(Month = lambda x: x[['Date_np']].applymap(lambda x: x.month))\n",
    "                  )\n",
    "industry_return = industry_return.pivot(index=['Year','Month'],columns='证监会行业门类代码_Csrciccd1',values='行业月收益率_流通市值加权_Mrettmv').reset_index()\n",
    "indret_and_states = pd.merge(industry_return, states, left_on=['Year','Month'], right_on=['Year','Month'])\n",
    "indret_and_states.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "e68a267e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ind = 'M'; state='InfoLevel1'\n",
    "# ind = 'M'; state='InfoLevel4'\n",
    "# ind = 'N'; state='InfoLevel4'\n",
    "# ind = 'E'; state='general'\n",
    "fig, ax = plt.subplots()\n",
    "colors = ['blue','orange']\n",
    "for i in range(len(indret_and_states)):\n",
    "    ax.scatter(indret_and_states['datetime64'][i], indret_and_states[ind][i], \n",
    "               color=colors[int(indret_and_states[state][i]-1)], \n",
    "               alpha=1)\n",
    "# ax.set_title(\"不同市场状态下收益率散点图\\n（行业={}, 信息级别={}）\".format(ind, state[-1]))\n",
    "ax.set_xlabel(\"日期\")\n",
    "ax.set_ylabel('收益率(%)')\n",
    "ax.grid(True)\n",
    "plt.savefig('/Users/yanyan/Downloads/图片/不同市场状态下收益率散点图_ind{}_{}'.format(ind,state),dpi=350)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "c345bbbd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "KstestResult(statistic=0.5833333333333334, pvalue=0.031436056203858066, statistic_location=0.0932403995318088, statistic_sign=-1)\n",
      "MEAN of state 1=0.1122, MEAN of state 2=0.0895\n",
      "STD of state 1=0.022, STD of state 2=0.0303,\n"
     ]
    }
   ],
   "source": [
    "state_1 = []; state_2=[]\n",
    "# for state in ['InfoLevel1', 'InfoLevel2', 'InfoLevel3', 'InfoLevel4']:\n",
    "for state in ['general', 'InfoLevel1']:\n",
    "    for ind in list(\"BMLQOE\"):\n",
    "        state_1.append(indret_and_states.groupby(state)[ind].std().values[0])\n",
    "        state_2.append(indret_and_states.groupby(state)[ind].std().values[1])\n",
    "print(ks_2samp(state_1, state_2))\n",
    "print(\"MEAN of state 1={}, MEAN of state 2={}\".format(np.round(np.mean(state_1),4), np.round(np.mean(state_2),4)))\n",
    "print(\"STD of state 1={}, STD of state 2={},\".format(np.round(np.std(state_1),4), np.round(np.std(state_2),4)))\n",
    "# print(np.mean(state_1), np.mean(state_2))\n",
    "# print(np.std(state_1), np.std(state_2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "a759ec57",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "state: general\n",
      "KstestResult(statistic=0.3157894736842105, pvalue=0.3056890512159651, statistic_location=0.07863327253002057, statistic_sign=-1)\n",
      "MEAN of state 1=0.0995, MEAN of state 2=0.0932\n",
      "STD of state 1=0.0217, STD of state 2=0.0194,\n",
      "\n",
      "state: InfoLevel1\n",
      "KstestResult(statistic=0.8421052631578947, pvalue=4.773482550722961e-07, statistic_location=0.09004037594212272, statistic_sign=-1)\n",
      "MEAN of state 1=0.1133, MEAN of state 2=0.0724\n",
      "STD of state 1=0.0256, STD of state 2=0.0227,\n",
      "\n",
      "state: InfoLevel2\n",
      "KstestResult(statistic=0.3157894736842105, pvalue=0.3056890512159651, statistic_location=0.08313335657968077, statistic_sign=1)\n",
      "MEAN of state 1=0.097, MEAN of state 2=0.1039\n",
      "STD of state 1=0.0204, STD of state 2=0.0212,\n",
      "\n",
      "state: InfoLevel3\n",
      "KstestResult(statistic=0.42105263157894735, pvalue=0.06808911421959735, statistic_location=0.09402473630046632, statistic_sign=1)\n",
      "MEAN of state 1=0.0952, MEAN of state 2=0.1049\n",
      "STD of state 1=0.0228, STD of state 2=0.0147,\n",
      "\n"
     ]
    }
   ],
   "source": [
    "for state in ['general', 'InfoLevel1', 'InfoLevel2', 'InfoLevel3']:\n",
    "    state_1 = []; state_2=[]\n",
    "    for ind in industry_return.columns[2:]:\n",
    "        state_1.append(indret_and_states.groupby(state)[ind].std().values[0])\n",
    "        state_2.append(indret_and_states.groupby(state)[ind].std().values[1])\n",
    "    print(\"state: {}\".format(state))\n",
    "    print(ks_2samp(state_1, state_2))\n",
    "    print(\"MEAN of state 1={}, MEAN of state 2={}\".format(np.round(np.mean(state_1),4), np.round(np.mean(state_2),4)))\n",
    "    print(\"STD of state 1={}, STD of state 2={},\".format(np.round(np.std(state_1),4), np.round(np.std(state_2),4)))\n",
    "    print()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "5ec9dd23",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>A</th>\n",
       "      <th>B</th>\n",
       "      <th>C</th>\n",
       "      <th>D</th>\n",
       "      <th>E</th>\n",
       "      <th>F</th>\n",
       "      <th>G</th>\n",
       "      <th>H</th>\n",
       "      <th>...</th>\n",
       "      <th>J_Var</th>\n",
       "      <th>K_Var</th>\n",
       "      <th>L_Var</th>\n",
       "      <th>M_Var</th>\n",
       "      <th>N_Var</th>\n",
       "      <th>O_Var</th>\n",
       "      <th>P_Var</th>\n",
       "      <th>Q_Var</th>\n",
       "      <th>R_Var</th>\n",
       "      <th>S_Var</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2007</td>\n",
       "      <td>12</td>\n",
       "      <td>0.2447</td>\n",
       "      <td>0.1017</td>\n",
       "      <td>0.2118</td>\n",
       "      <td>0.1746</td>\n",
       "      <td>0.1938</td>\n",
       "      <td>0.1983</td>\n",
       "      <td>0.1527</td>\n",
       "      <td>0.1787</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000466</td>\n",
       "      <td>0.000806</td>\n",
       "      <td>0.000570</td>\n",
       "      <td>0.000706</td>\n",
       "      <td>0.000323</td>\n",
       "      <td>0.001210</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000553</td>\n",
       "      <td>0.000203</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2008</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0584</td>\n",
       "      <td>-0.1628</td>\n",
       "      <td>-0.0823</td>\n",
       "      <td>-0.1518</td>\n",
       "      <td>-0.1185</td>\n",
       "      <td>-0.0967</td>\n",
       "      <td>-0.1510</td>\n",
       "      <td>-0.1216</td>\n",
       "      <td>...</td>\n",
       "      <td>0.001088</td>\n",
       "      <td>0.001403</td>\n",
       "      <td>0.001230</td>\n",
       "      <td>0.001390</td>\n",
       "      <td>0.001428</td>\n",
       "      <td>0.001441</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.001690</td>\n",
       "      <td>0.001221</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2008</td>\n",
       "      <td>2</td>\n",
       "      <td>0.1328</td>\n",
       "      <td>-0.0247</td>\n",
       "      <td>0.0567</td>\n",
       "      <td>0.0641</td>\n",
       "      <td>0.0543</td>\n",
       "      <td>0.0770</td>\n",
       "      <td>0.0333</td>\n",
       "      <td>0.0769</td>\n",
       "      <td>...</td>\n",
       "      <td>0.001294</td>\n",
       "      <td>0.000997</td>\n",
       "      <td>0.000726</td>\n",
       "      <td>0.001199</td>\n",
       "      <td>0.001030</td>\n",
       "      <td>0.001425</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000791</td>\n",
       "      <td>0.000997</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2008</td>\n",
       "      <td>3</td>\n",
       "      <td>-0.2071</td>\n",
       "      <td>-0.2226</td>\n",
       "      <td>-0.2139</td>\n",
       "      <td>-0.2169</td>\n",
       "      <td>-0.2267</td>\n",
       "      <td>-0.2101</td>\n",
       "      <td>-0.1957</td>\n",
       "      <td>-0.1710</td>\n",
       "      <td>...</td>\n",
       "      <td>0.001062</td>\n",
       "      <td>0.001349</td>\n",
       "      <td>0.001103</td>\n",
       "      <td>0.001116</td>\n",
       "      <td>0.001724</td>\n",
       "      <td>0.002901</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.001945</td>\n",
       "      <td>0.001464</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2008</td>\n",
       "      <td>4</td>\n",
       "      <td>0.0775</td>\n",
       "      <td>0.0952</td>\n",
       "      <td>-0.0128</td>\n",
       "      <td>-0.0317</td>\n",
       "      <td>-0.0113</td>\n",
       "      <td>0.0083</td>\n",
       "      <td>0.0071</td>\n",
       "      <td>-0.0695</td>\n",
       "      <td>...</td>\n",
       "      <td>0.001492</td>\n",
       "      <td>0.002428</td>\n",
       "      <td>0.002041</td>\n",
       "      <td>0.002303</td>\n",
       "      <td>0.002599</td>\n",
       "      <td>0.003824</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.002568</td>\n",
       "      <td>0.002251</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 45 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Year  Month       A       B       C       D       E       F       G  \\\n",
       "0  2007     12  0.2447  0.1017  0.2118  0.1746  0.1938  0.1983  0.1527   \n",
       "1  2008      1  0.0584 -0.1628 -0.0823 -0.1518 -0.1185 -0.0967 -0.1510   \n",
       "2  2008      2  0.1328 -0.0247  0.0567  0.0641  0.0543  0.0770  0.0333   \n",
       "3  2008      3 -0.2071 -0.2226 -0.2139 -0.2169 -0.2267 -0.2101 -0.1957   \n",
       "4  2008      4  0.0775  0.0952 -0.0128 -0.0317 -0.0113  0.0083  0.0071   \n",
       "\n",
       "        H  ...     J_Var     K_Var     L_Var     M_Var     N_Var     O_Var  \\\n",
       "0  0.1787  ...  0.000466  0.000806  0.000570  0.000706  0.000323  0.001210   \n",
       "1 -0.1216  ...  0.001088  0.001403  0.001230  0.001390  0.001428  0.001441   \n",
       "2  0.0769  ...  0.001294  0.000997  0.000726  0.001199  0.001030  0.001425   \n",
       "3 -0.1710  ...  0.001062  0.001349  0.001103  0.001116  0.001724  0.002901   \n",
       "4 -0.0695  ...  0.001492  0.002428  0.002041  0.002303  0.002599  0.003824   \n",
       "\n",
       "   P_Var  Q_Var     R_Var     S_Var  \n",
       "0    NaN    NaN  0.000553  0.000203  \n",
       "1    NaN    NaN  0.001690  0.001221  \n",
       "2    NaN    NaN  0.000791  0.000997  \n",
       "3    NaN    NaN  0.001945  0.001464  \n",
       "4    NaN    NaN  0.002568  0.002251  \n",
       "\n",
       "[5 rows x 45 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "temp = (pd.concat([pd.read_csv('/Users/yanyan/Documents/MyQuant/MarketSeparationBasedOnNLP/Code（毕业论文）/Data/证监会门类行业日收益率/RESSET_DRET_INDUSTRY_1_1.csv'), \n",
    "                  pd.read_csv('/Users/yanyan/Documents/MyQuant/MarketSeparationBasedOnNLP/Code（毕业论文）/Data/证监会门类行业日收益率/RESSET_DRET_INDUSTRY_1_2.csv')],\n",
    "                  axis=0\n",
    "                 )\n",
    "        .assign(datetime64 = lambda x: x[['日期_Date']].applymap(lambda x: np.datetime64(x)))\n",
    "        .set_index('datetime64')\n",
    "        .pipe(lambda x: x.groupby('证监会行业门类代码_Csrciccd1')['行业日收益率_流通市值加权_Drettmv'].resample('M').var())\n",
    "        .reset_index()\n",
    "        .pivot_table(index='datetime64',columns='证监会行业门类代码_Csrciccd1',values='行业日收益率_流通市值加权_Drettmv')\n",
    "       )\n",
    "temp = pd.merge(indret_and_states, temp, left_on='datetime64',right_on='datetime64', suffixes=['','_Var'])\n",
    "display(temp.head())\n",
    "\n",
    "var = temp[['datetime64','A_Var',\n",
    "       'B_Var', 'C_Var', 'D_Var', 'E_Var', 'F_Var', 'G_Var', 'H_Var', 'I_Var',\n",
    "       'J_Var', 'K_Var', 'L_Var', 'M_Var', 'N_Var', 'O_Var', 'P_Var', 'Q_Var',\n",
    "       'R_Var', 'S_Var']]\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "n=2\n",
    "for state in ['general','InfoLevel1','InfoLevel2','InfoLevel3',]:\n",
    "    diff = temp[[state]].diff()\n",
    "    before_2=[];before_1=[]; current = []; after_1=[]; after_2=[]\n",
    "    for i in (diff.loc[diff[state]!=0]).index:\n",
    "#         for ind in ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N',\n",
    "#        'O', 'P', 'Q', 'R', 'S']:\n",
    "#         for ind in ['P']:\n",
    "        for ind in ['N']:\n",
    "            ind = ind + '_Var'\n",
    "            current.append(temp[ind].iloc[i])\n",
    "            if i-2 >= 0: before_2.append(temp[ind].iloc[i-2]) \n",
    "            if i-1 >= 0: before_1.append(temp[ind].iloc[i-1])\n",
    "            if i+1 < len(temp): after_1.append(temp[ind].iloc[i+1])\n",
    "            if i+2 < len(temp): after_2.append(temp[ind].iloc[i+2])\n",
    "    y = [np.nanmean(before_2),np.nanmean(before_1), np.nanmean(current), np.nanmean(after_1), np.nanmean(after_2)]\n",
    "    labels={\n",
    "        'general':'全部',\n",
    "        'InfoLevel1':'一级政策',\n",
    "        'InfoLevel2':'二级政策',\n",
    "        'InfoLevel3':'三级政策',\n",
    "#         'InfoLevel4':'四级政策',\n",
    "    }\n",
    "    colors={\n",
    "        'general':'#c24e3d',\n",
    "        'InfoLevel1':'#7b5347',\n",
    "        'InfoLevel2':'#35180e',\n",
    "        'InfoLevel3':'#cb8d79',\n",
    "#         'InfoLevel4':'#fad4ca',\n",
    "    }\n",
    "    ax.plot([-2,-1,0,1,2],y,label=labels[state],color=colors[state])\n",
    "ax.xaxis.set_major_locator(plt.MultipleLocator(1))\n",
    "plt.legend(bbox_to_anchor=(1.05, 0.6), loc=3, borderaxespad=0)\n",
    "ax.set_ylabel('收益率方差')\n",
    "ax.set_xlabel('月')\n",
    "# ax.set_title('状态转换附近5月的收益率方差')\n",
    "ax.grid(True)\n",
    "plt.savefig('/Users/yanyan/Downloads/图片/状态转换附近5月的收益率方差', dpi=350)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "6f517414",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='datetime64'>"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def get_concentration(arr):\n",
    "    std_arr = []\n",
    "    for x in arr:\n",
    "        std_arr.append(x / np.linalg.norm(x))\n",
    "    sum_arr = np.sum(np.array(std_arr), axis=0) / len(std_arr)\n",
    "    return np.linalg.norm(sum_arr)\n",
    "(policy_and_states.groupby('datetime64')['DocVec'].apply(lambda x: get_concentration(x.values))).plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "9c808af4",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>A</th>\n",
       "      <th>B</th>\n",
       "      <th>C</th>\n",
       "      <th>D</th>\n",
       "      <th>E</th>\n",
       "      <th>F</th>\n",
       "      <th>G</th>\n",
       "      <th>H</th>\n",
       "      <th>...</th>\n",
       "      <th>P</th>\n",
       "      <th>Q</th>\n",
       "      <th>R</th>\n",
       "      <th>S</th>\n",
       "      <th>datetime64</th>\n",
       "      <th>general</th>\n",
       "      <th>InfoLevel1</th>\n",
       "      <th>InfoLevel2</th>\n",
       "      <th>InfoLevel3</th>\n",
       "      <th>concentration</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2007</td>\n",
       "      <td>12</td>\n",
       "      <td>0.2447</td>\n",
       "      <td>0.1017</td>\n",
       "      <td>0.2118</td>\n",
       "      <td>0.1746</td>\n",
       "      <td>0.1938</td>\n",
       "      <td>0.1983</td>\n",
       "      <td>0.1527</td>\n",
       "      <td>0.1787</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.2625</td>\n",
       "      <td>0.1759</td>\n",
       "      <td>2007-12-31</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.766413</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2008</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0584</td>\n",
       "      <td>-0.1628</td>\n",
       "      <td>-0.0823</td>\n",
       "      <td>-0.1518</td>\n",
       "      <td>-0.1185</td>\n",
       "      <td>-0.0967</td>\n",
       "      <td>-0.1510</td>\n",
       "      <td>-0.1216</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.1041</td>\n",
       "      <td>-0.0600</td>\n",
       "      <td>2008-01-31</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.764564</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2008</td>\n",
       "      <td>2</td>\n",
       "      <td>0.1328</td>\n",
       "      <td>-0.0247</td>\n",
       "      <td>0.0567</td>\n",
       "      <td>0.0641</td>\n",
       "      <td>0.0543</td>\n",
       "      <td>0.0770</td>\n",
       "      <td>0.0333</td>\n",
       "      <td>0.0769</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0913</td>\n",
       "      <td>0.0793</td>\n",
       "      <td>2008-02-29</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.818275</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2008</td>\n",
       "      <td>3</td>\n",
       "      <td>-0.2071</td>\n",
       "      <td>-0.2226</td>\n",
       "      <td>-0.2139</td>\n",
       "      <td>-0.2169</td>\n",
       "      <td>-0.2267</td>\n",
       "      <td>-0.2101</td>\n",
       "      <td>-0.1957</td>\n",
       "      <td>-0.1710</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.2808</td>\n",
       "      <td>-0.1963</td>\n",
       "      <td>2008-03-31</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.783462</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2008</td>\n",
       "      <td>4</td>\n",
       "      <td>0.0775</td>\n",
       "      <td>0.0952</td>\n",
       "      <td>-0.0128</td>\n",
       "      <td>-0.0317</td>\n",
       "      <td>-0.0113</td>\n",
       "      <td>0.0083</td>\n",
       "      <td>0.0071</td>\n",
       "      <td>-0.0695</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0881</td>\n",
       "      <td>-0.0517</td>\n",
       "      <td>2008-04-30</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.814129</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Year  Month       A       B       C       D       E       F       G  \\\n",
       "0  2007     12  0.2447  0.1017  0.2118  0.1746  0.1938  0.1983  0.1527   \n",
       "1  2008      1  0.0584 -0.1628 -0.0823 -0.1518 -0.1185 -0.0967 -0.1510   \n",
       "2  2008      2  0.1328 -0.0247  0.0567  0.0641  0.0543  0.0770  0.0333   \n",
       "3  2008      3 -0.2071 -0.2226 -0.2139 -0.2169 -0.2267 -0.2101 -0.1957   \n",
       "4  2008      4  0.0775  0.0952 -0.0128 -0.0317 -0.0113  0.0083  0.0071   \n",
       "\n",
       "        H  ...   P   Q       R       S  datetime64  general  InfoLevel1  \\\n",
       "0  0.1787  ... NaN NaN  0.2625  0.1759  2007-12-31      2.0         1.0   \n",
       "1 -0.1216  ... NaN NaN -0.1041 -0.0600  2008-01-31      2.0         1.0   \n",
       "2  0.0769  ... NaN NaN  0.0913  0.0793  2008-02-29      2.0         1.0   \n",
       "3 -0.1710  ... NaN NaN -0.2808 -0.1963  2008-03-31      2.0         1.0   \n",
       "4 -0.0695  ... NaN NaN  0.0881 -0.0517  2008-04-30      2.0         1.0   \n",
       "\n",
       "   InfoLevel2  InfoLevel3  concentration  \n",
       "0         2.0         1.0       0.766413  \n",
       "1         2.0         2.0       0.764564  \n",
       "2         2.0         2.0       0.818275  \n",
       "3         2.0         2.0       0.783462  \n",
       "4         2.0         2.0       0.814129  \n",
       "\n",
       "[5 rows x 27 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "labels={\n",
    "    'general':'全部',\n",
    "    'InfoLevel1':'一级政策',\n",
    "    'InfoLevel2':'二级政策',\n",
    "    'InfoLevel3':'三级政策',\n",
    "#     'InfoLevel4':'四级政策',\n",
    "}\n",
    "colors={\n",
    "    'general':'#c24e3d',\n",
    "    'InfoLevel1':'#7b5347',\n",
    "    'InfoLevel2':'#35180e',\n",
    "    'InfoLevel3':'#cb8d79',\n",
    "#     'InfoLevel4':'#fad4ca',\n",
    "}\n",
    "def recursive_corr(arr):\n",
    "    corr_list = []\n",
    "    for i in range(len(arr)):\n",
    "        for j in range(i,len(arr)):\n",
    "            corr_list.append(np.corrcoef(arr[i],arr[j]))\n",
    "    return np.mean(corr_list)\n",
    "\n",
    "temp = (pd.DataFrame(policy_and_states.groupby('datetime64')['DocVec'].apply(lambda x: recursive_corr(x.values)))\n",
    "        .rename(columns={'DocVec':'concentration'})\n",
    "       )\n",
    "\n",
    "temp = pd.merge(indret_and_states, temp, left_on='datetime64',right_on='datetime64')\n",
    "\n",
    "concentration = temp\n",
    "display(temp.head())\n",
    "fig, ax = plt.subplots()\n",
    "for state in ['general','InfoLevel1','InfoLevel2','InfoLevel3',]:\n",
    "    diff = temp[[state]].diff()\n",
    "    before_2=[];before_1=[]; current = []; after_1=[]; after_2=[]\n",
    "    for i in (diff.loc[diff[state]!=0]).index:\n",
    "            current.append(temp['concentration'].iloc[i])\n",
    "            if i-2 >= 0: before_2.append(temp['concentration'].iloc[i-2]) \n",
    "            if i-1 >= 0: before_1.append(temp['concentration'].iloc[i-1])\n",
    "            if i+1 < len(temp): after_1.append(temp['concentration'].iloc[i+1])\n",
    "            if i+2 < len(temp): after_2.append(temp['concentration'].iloc[i+2])\n",
    "    y = [np.nanmean(before_2),np.nanmean(before_1), np.nanmean(current), np.nanmean(after_1), np.nanmean(after_2)]\n",
    "    ax.plot([-2,-1,0,1,2],y,label=labels[state], color=colors[state])\n",
    "    \n",
    "ax.xaxis.set_major_locator(plt.MultipleLocator(1))\n",
    "plt.legend(bbox_to_anchor=(1.05, 0.6), loc=3, borderaxespad=0)\n",
    "ax.set_title('状态转换附近5月的政策语意相关性')\n",
    "ax.set_xlabel('月')\n",
    "ax.set_ylabel('语意相关性')\n",
    "ax.grid(True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "3d45b568",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>A</th>\n",
       "      <th>B</th>\n",
       "      <th>C</th>\n",
       "      <th>D</th>\n",
       "      <th>E</th>\n",
       "      <th>F</th>\n",
       "      <th>G</th>\n",
       "      <th>H</th>\n",
       "      <th>...</th>\n",
       "      <th>P</th>\n",
       "      <th>Q</th>\n",
       "      <th>R</th>\n",
       "      <th>S</th>\n",
       "      <th>datetime64</th>\n",
       "      <th>general</th>\n",
       "      <th>InfoLevel1</th>\n",
       "      <th>InfoLevel2</th>\n",
       "      <th>InfoLevel3</th>\n",
       "      <th>concentration</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2007</td>\n",
       "      <td>12</td>\n",
       "      <td>0.2447</td>\n",
       "      <td>0.1017</td>\n",
       "      <td>0.2118</td>\n",
       "      <td>0.1746</td>\n",
       "      <td>0.1938</td>\n",
       "      <td>0.1983</td>\n",
       "      <td>0.1527</td>\n",
       "      <td>0.1787</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.2625</td>\n",
       "      <td>0.1759</td>\n",
       "      <td>2007-12-31</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2008</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0584</td>\n",
       "      <td>-0.1628</td>\n",
       "      <td>-0.0823</td>\n",
       "      <td>-0.1518</td>\n",
       "      <td>-0.1185</td>\n",
       "      <td>-0.0967</td>\n",
       "      <td>-0.1510</td>\n",
       "      <td>-0.1216</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.1041</td>\n",
       "      <td>-0.0600</td>\n",
       "      <td>2008-01-31</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2008</td>\n",
       "      <td>2</td>\n",
       "      <td>0.1328</td>\n",
       "      <td>-0.0247</td>\n",
       "      <td>0.0567</td>\n",
       "      <td>0.0641</td>\n",
       "      <td>0.0543</td>\n",
       "      <td>0.0770</td>\n",
       "      <td>0.0333</td>\n",
       "      <td>0.0769</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0913</td>\n",
       "      <td>0.0793</td>\n",
       "      <td>2008-02-29</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2008</td>\n",
       "      <td>3</td>\n",
       "      <td>-0.2071</td>\n",
       "      <td>-0.2226</td>\n",
       "      <td>-0.2139</td>\n",
       "      <td>-0.2169</td>\n",
       "      <td>-0.2267</td>\n",
       "      <td>-0.2101</td>\n",
       "      <td>-0.1957</td>\n",
       "      <td>-0.1710</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.2808</td>\n",
       "      <td>-0.1963</td>\n",
       "      <td>2008-03-31</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2008</td>\n",
       "      <td>4</td>\n",
       "      <td>0.0775</td>\n",
       "      <td>0.0952</td>\n",
       "      <td>-0.0128</td>\n",
       "      <td>-0.0317</td>\n",
       "      <td>-0.0113</td>\n",
       "      <td>0.0083</td>\n",
       "      <td>0.0071</td>\n",
       "      <td>-0.0695</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0881</td>\n",
       "      <td>-0.0517</td>\n",
       "      <td>2008-04-30</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Year  Month       A       B       C       D       E       F       G  \\\n",
       "0  2007     12  0.2447  0.1017  0.2118  0.1746  0.1938  0.1983  0.1527   \n",
       "1  2008      1  0.0584 -0.1628 -0.0823 -0.1518 -0.1185 -0.0967 -0.1510   \n",
       "2  2008      2  0.1328 -0.0247  0.0567  0.0641  0.0543  0.0770  0.0333   \n",
       "3  2008      3 -0.2071 -0.2226 -0.2139 -0.2169 -0.2267 -0.2101 -0.1957   \n",
       "4  2008      4  0.0775  0.0952 -0.0128 -0.0317 -0.0113  0.0083  0.0071   \n",
       "\n",
       "        H  ...   P   Q       R       S  datetime64  general  InfoLevel1  \\\n",
       "0  0.1787  ... NaN NaN  0.2625  0.1759  2007-12-31      2.0         1.0   \n",
       "1 -0.1216  ... NaN NaN -0.1041 -0.0600  2008-01-31      2.0         1.0   \n",
       "2  0.0769  ... NaN NaN  0.0913  0.0793  2008-02-29      2.0         1.0   \n",
       "3 -0.1710  ... NaN NaN -0.2808 -0.1963  2008-03-31      2.0         1.0   \n",
       "4 -0.0695  ... NaN NaN  0.0881 -0.0517  2008-04-30      2.0         1.0   \n",
       "\n",
       "   InfoLevel2  InfoLevel3  concentration  \n",
       "0         2.0         1.0             42  \n",
       "1         2.0         2.0             41  \n",
       "2         2.0         2.0             12  \n",
       "3         2.0         2.0              8  \n",
       "4         2.0         2.0              9  \n",
       "\n",
       "[5 rows x 27 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "labels={\n",
    "    'general':'全部',\n",
    "    'InfoLevel1':'一级政策',\n",
    "    'InfoLevel2':'二级政策',\n",
    "    'InfoLevel3':'三级政策',\n",
    "#     'InfoLevel4':'四级政策',\n",
    "}\n",
    "colors={\n",
    "    'general':'#c24e3d',\n",
    "    'InfoLevel1':'#7b5347',\n",
    "    'InfoLevel2':'#35180e',\n",
    "    'InfoLevel3':'#cb8d79',\n",
    "#     'InfoLevel4':'#fad4ca',\n",
    "}\n",
    "\n",
    "temp = (pd.DataFrame(policy_and_states.groupby('datetime64')['DocVec'].count())\n",
    "        .rename(columns={'DocVec':'concentration'})\n",
    "       )\n",
    "\n",
    "temp = pd.merge(indret_and_states, temp, left_on='datetime64',right_on='datetime64')\n",
    "display(temp.head())\n",
    "\n",
    "num = {}\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "for state in ['general','InfoLevel1','InfoLevel2','InfoLevel3',]:\n",
    "    diff = temp[[state]].diff()\n",
    "    before_2=[];before_1=[]; current = []; after_1=[]; after_2=[]\n",
    "    for i in (diff.loc[diff[state]!=0]).index:\n",
    "            current.append(temp['concentration'].iloc[i])\n",
    "            if i-2 >= 0: before_2.append(temp['concentration'].iloc[i-2]) \n",
    "            if i-1 >= 0: before_1.append(temp['concentration'].iloc[i-1])\n",
    "            if i+1 < len(temp): after_1.append(temp['concentration'].iloc[i+1])\n",
    "            if i+2 < len(temp): after_2.append(temp['concentration'].iloc[i+2])\n",
    "    y = [np.nanmean(before_2),np.nanmean(before_1), np.nanmean(current), np.nanmean(after_1), np.nanmean(after_2)]\n",
    "#     print(state, '\\t', y)\n",
    "#     if state=='general': print((diff.loc[diff[state]!=0]).index)\n",
    "#     if state=='InfoLevel1': print((diff.loc[diff[state]!=0]).index)\n",
    "    ax.plot([-2,-1,0,1,2],y,label=labels[state],color=colors[state])\n",
    "\n",
    "ax.xaxis.set_major_locator(plt.MultipleLocator(1))\n",
    "plt.legend(bbox_to_anchor=(1.05, 0.6), loc=3, borderaxespad=0)\n",
    "# ax.set_title('状态转换附近5月的政策数量')\n",
    "ax.set_xlabel('月')\n",
    "ax.set_ylabel('政策数量（条）')\n",
    "ax.grid(True)\n",
    "plt.savefig('/Users/yanyan/Downloads/图片/状态转换附近5月的政策数量.png',dpi=250)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "44c7a778",
   "metadata": {},
   "source": [
    "#### 检查不同的市场状态下的向量的距离"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "fe96f9b1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 降维散点图\n",
    "labels={\n",
    "    'general':'全部',\n",
    "    'InfoLevel1':'一级政策',\n",
    "    'InfoLevel2':'二级政策',\n",
    "    'InfoLevel3':'三级政策',\n",
    "#     'InfoLevel4':'四级政策',\n",
    "}\n",
    "\n",
    "from sklearn.manifold import SpectralEmbedding, Isomap, MDS, TSNE\n",
    "\n",
    "def scatter_dimension_reduced(start, end, state):\n",
    "    temp = pd.merge(policy_and_states.groupby(['Year','Month'])['DocVec'].mean().reset_index(),\n",
    "         states,\n",
    "         left_on=['Year','Month'],\n",
    "         right_on=['Year','Month']\n",
    "        )\n",
    "    temp = temp.loc[(temp['datetime64']>=start) & (temp['datetime64']<=end)]\n",
    "#     display(temp)\n",
    "    \n",
    "    X_embedded = TSNE(n_components=2).fit_transform(np.array([i.tolist() for i in temp['DocVec'].values]))\n",
    "    temp['TsneVec'] = [X_embedded[i] for i in range(len(X_embedded))]\n",
    "    x = [i[0] for i in temp['TsneVec'].values]\n",
    "    y = [i[1] for i in temp['TsneVec'].values]\n",
    "    colors = temp[state].map({\n",
    "        1:'blue',\n",
    "        2:'orange'\n",
    "    }).tolist()\n",
    "    fig, ax = plt.subplots(figsize=(10,5))\n",
    "    plt.scatter(x, y, c=colors)\n",
    "    ax.set_xlabel('降维向量的第一分量')\n",
    "    ax.set_ylabel('降维向量的第二分量')\n",
    "    plt.grid(True)\n",
    "#     plt.title('降维政策文本向量散点图 \\n({})'.format(labels[state]))\n",
    "    plt.show()\n",
    "\n",
    "scatter_dimension_reduced(start='2007-12', end='2023-5',state='general')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "7fa105f0",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 降维散点图\n",
    "from sklearn.manifold import SpectralEmbedding, Isomap, MDS, TSNE\n",
    "\n",
    "def scatter_dimension_reduced(start, end, state):\n",
    "    temp = pd.merge(policy_and_states.groupby(['Year','Month'])['DocVec'].mean().reset_index(),\n",
    "         states,\n",
    "         left_on=['Year','Month'],\n",
    "         right_on=['Year','Month']\n",
    "        )\n",
    "    temp = temp.loc[(temp['datetime64']>=start) & (temp['datetime64']<=end)]\n",
    "#     display(temp)\n",
    "    \n",
    "    X_embedded = TSNE(n_components=2).fit_transform(np.array([i.tolist() for i in temp['DocVec'].values]))\n",
    "    temp['TsneVec'] = [X_embedded[i] for i in range(len(X_embedded))]\n",
    "    x = [i[0] for i in temp['TsneVec'].values]\n",
    "    y = [i[1] for i in temp['TsneVec'].values]\n",
    "    colors = temp[state].map({\n",
    "        1:'#000000',\n",
    "        2:'#000000'\n",
    "    }).tolist()\n",
    "    fig, ax = plt.subplots(figsize=(10,5))\n",
    "    plt.scatter(x, y, c=colors)\n",
    "    ax.set_xlabel('降维向量的第一分量')\n",
    "    ax.set_ylabel('降维向量的第二分量')\n",
    "#     ax.set_title('2维政策文本向量分布散点图')\n",
    "    ax.grid(True)\n",
    "    plt.show()\n",
    "\n",
    "scatter_dimension_reduced(start='2007-12', end='2023-5',state='InfoLevel3')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b794adc",
   "metadata": {},
   "source": [
    "### 回归\n",
    "\n",
    "1. 检验政策数量是否对收益率波动性有显著影响\n",
    "\n",
    "2. 检验政策相关性是否对收益率波动性有显著影响"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "a74f2dc6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>A</th>\n",
       "      <th>B</th>\n",
       "      <th>C</th>\n",
       "      <th>D</th>\n",
       "      <th>E</th>\n",
       "      <th>F</th>\n",
       "      <th>G</th>\n",
       "      <th>H</th>\n",
       "      <th>...</th>\n",
       "      <th>Q</th>\n",
       "      <th>R</th>\n",
       "      <th>S</th>\n",
       "      <th>datetime64</th>\n",
       "      <th>general</th>\n",
       "      <th>InfoLevel1</th>\n",
       "      <th>InfoLevel2</th>\n",
       "      <th>InfoLevel3</th>\n",
       "      <th>concentration</th>\n",
       "      <th>指数月收益率_IdxMonRet</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2008</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0584</td>\n",
       "      <td>-0.1628</td>\n",
       "      <td>-0.0823</td>\n",
       "      <td>-0.1518</td>\n",
       "      <td>-0.1185</td>\n",
       "      <td>-0.0967</td>\n",
       "      <td>-0.1510</td>\n",
       "      <td>-0.1216</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.1041</td>\n",
       "      <td>-0.0600</td>\n",
       "      <td>2008-01-31</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.764564</td>\n",
       "      <td>-0.1669</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2008</td>\n",
       "      <td>2</td>\n",
       "      <td>0.1328</td>\n",
       "      <td>-0.0247</td>\n",
       "      <td>0.0567</td>\n",
       "      <td>0.0641</td>\n",
       "      <td>0.0543</td>\n",
       "      <td>0.0770</td>\n",
       "      <td>0.0333</td>\n",
       "      <td>0.0769</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0913</td>\n",
       "      <td>0.0793</td>\n",
       "      <td>2008-02-29</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.818275</td>\n",
       "      <td>-0.0080</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2008</td>\n",
       "      <td>3</td>\n",
       "      <td>-0.2071</td>\n",
       "      <td>-0.2226</td>\n",
       "      <td>-0.2139</td>\n",
       "      <td>-0.2169</td>\n",
       "      <td>-0.2267</td>\n",
       "      <td>-0.2101</td>\n",
       "      <td>-0.1957</td>\n",
       "      <td>-0.1710</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.2808</td>\n",
       "      <td>-0.1963</td>\n",
       "      <td>2008-03-31</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.783462</td>\n",
       "      <td>-0.2014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2008</td>\n",
       "      <td>4</td>\n",
       "      <td>0.0775</td>\n",
       "      <td>0.0952</td>\n",
       "      <td>-0.0128</td>\n",
       "      <td>-0.0317</td>\n",
       "      <td>-0.0113</td>\n",
       "      <td>0.0083</td>\n",
       "      <td>0.0071</td>\n",
       "      <td>-0.0695</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0881</td>\n",
       "      <td>-0.0517</td>\n",
       "      <td>2008-04-30</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.814129</td>\n",
       "      <td>0.0635</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2008</td>\n",
       "      <td>6</td>\n",
       "      <td>-0.2247</td>\n",
       "      <td>-0.1809</td>\n",
       "      <td>-0.2391</td>\n",
       "      <td>-0.2272</td>\n",
       "      <td>-0.2297</td>\n",
       "      <td>-0.2145</td>\n",
       "      <td>-0.2363</td>\n",
       "      <td>-0.1838</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.2058</td>\n",
       "      <td>-0.2489</td>\n",
       "      <td>2008-06-30</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.753304</td>\n",
       "      <td>-0.2031</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Year  Month       A       B       C       D       E       F       G  \\\n",
       "0  2008      1  0.0584 -0.1628 -0.0823 -0.1518 -0.1185 -0.0967 -0.1510   \n",
       "1  2008      2  0.1328 -0.0247  0.0567  0.0641  0.0543  0.0770  0.0333   \n",
       "2  2008      3 -0.2071 -0.2226 -0.2139 -0.2169 -0.2267 -0.2101 -0.1957   \n",
       "3  2008      4  0.0775  0.0952 -0.0128 -0.0317 -0.0113  0.0083  0.0071   \n",
       "4  2008      6 -0.2247 -0.1809 -0.2391 -0.2272 -0.2297 -0.2145 -0.2363   \n",
       "\n",
       "        H  ...   Q       R       S  datetime64  general  InfoLevel1  \\\n",
       "0 -0.1216  ... NaN -0.1041 -0.0600  2008-01-31      2.0         1.0   \n",
       "1  0.0769  ... NaN  0.0913  0.0793  2008-02-29      2.0         1.0   \n",
       "2 -0.1710  ... NaN -0.2808 -0.1963  2008-03-31      2.0         1.0   \n",
       "3 -0.0695  ... NaN  0.0881 -0.0517  2008-04-30      2.0         1.0   \n",
       "4 -0.1838  ... NaN -0.2058 -0.2489  2008-06-30      2.0         1.0   \n",
       "\n",
       "   InfoLevel2  InfoLevel3  concentration  指数月收益率_IdxMonRet  \n",
       "0         2.0         2.0       0.764564           -0.1669  \n",
       "1         2.0         2.0       0.818275           -0.0080  \n",
       "2         2.0         2.0       0.783462           -0.2014  \n",
       "3         2.0         2.0       0.814129            0.0635  \n",
       "4         2.0         2.0       0.753304           -0.2031  \n",
       "\n",
       "[5 rows x 28 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "SZZZ = (pd.read_csv('/Users/yanyan/Downloads/RESSET_IDXMONRET_1.csv')\n",
    "        .assign(datetime64 = lambda x: x[['交易日期_TrdDt']].applymap(lambda x: np.datetime64(x)))\n",
    "        .pipe(lambda x: x[['datetime64','指数月收益率_IdxMonRet']])\n",
    "        .pipe(lambda x: pd.merge(left=concentration, right=x, left_on='datetime64',right_on='datetime64'))\n",
    "       )\n",
    "\n",
    "display(SZZZ.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "0a5b5aa0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "检验政策数量是否对收益率波动性有显著影响(无收益率滞后项)\n",
      "A:\t P-(num)=8.261238058399813e-05***\n",
      "B:\t P-(num)=9.609177253279819e-05***\n",
      "C:\t P-(num)=0.0006573007275284764***\n",
      "D:\t P-(num)=0.003010391261207419***\n",
      "E:\t P-(num)=0.008113127712167255***\n",
      "F:\t P-(num)=0.003908614774198193***\n",
      "G:\t P-(num)=0.0016486701011487071***\n",
      "H:\t P-(num)=1.7846490091004338e-05***\n",
      "I:\t P-(num)=0.0037264758101324107***\n",
      "J:\t P-(num)=0.0002548151148767244***\n",
      "K:\t P-(num)=0.0007578367793809246***\n",
      "L:\t P-(num)=6.90051329119621e-05***\n",
      "M:\t P-(num)=0.004383530439869388***\n",
      "N:\t P-(num)=0.0011401369641973623***\n",
      "O:\t P-(num)=7.94378765340979e-05***\n",
      "P:\t P-(num)=0.037775275175036746**\n",
      "Q:\t P-(num)=0.0044317668510833255***\n",
      "R:\t P-(num)=0.02688970191713278**\n",
      "S:\t P-(num)=0.0025229230062776852***\n",
      "\n",
      "\n",
      "检验政策相关性是否对收益率波动性有显著影响(无收益率滞后项)\n",
      "A:\t P-(concentration)=0.006040411071900714***\n",
      "B:\t P-(concentration)=0.0022811052719926817***\n",
      "C:\t P-(concentration)=0.01452301319207793**\n",
      "D:\t P-(concentration)=0.036089450882616385**\n",
      "E:\t P-(concentration)=0.1898311233172472\n",
      "F:\t P-(concentration)=0.020254118997105896**\n",
      "G:\t P-(concentration)=0.02626790587809448**\n",
      "H:\t P-(concentration)=0.004878635158000384***\n",
      "I:\t P-(concentration)=0.058694382607020125*\n",
      "J:\t P-(concentration)=0.02942364619283587**\n",
      "K:\t P-(concentration)=0.042196295227172595**\n",
      "L:\t P-(concentration)=0.01286567469087951**\n",
      "M:\t P-(concentration)=0.028514043858304004**\n",
      "N:\t P-(concentration)=0.020181930121926945**\n",
      "O:\t P-(concentration)=0.03945413821415899**\n",
      "P:\t P-(concentration)=0.18792327625266658\n",
      "Q:\t P-(concentration)=0.18243280011083302\n",
      "R:\t P-(concentration)=0.32802972511325623\n",
      "S:\t P-(concentration)=0.038583547190817934**\n"
     ]
    }
   ],
   "source": [
    "temp = (pd.merge(var, concentration, left_on='datetime64',right_on='datetime64')\n",
    "        .pipe(lambda x: pd.merge(x,\n",
    "                                pd.DataFrame(policy_and_states.groupby('datetime64')['DocVec'].count()).rename(columns={'DocVec':'num'}),\n",
    "                                    left_on='datetime64',right_on='datetime64'\n",
    "                                ))\n",
    "       )\n",
    "# display(temp.head())\n",
    "print('检验政策数量是否对收益率波动性有显著影响(无收益率滞后项)')\n",
    "for ind in ['A_Var',\n",
    "       'B_Var', 'C_Var', 'D_Var', 'E_Var', 'F_Var', 'G_Var', 'H_Var', 'I_Var',\n",
    "       'J_Var', 'K_Var', 'L_Var', 'M_Var', 'N_Var', 'O_Var', 'P_Var', 'Q_Var',\n",
    "       'R_Var', 'S_Var']:\n",
    "    t = (temp[[ind, 'num']]).copy()\n",
    "    t.dropna(inplace=True)\n",
    "    model = sm.OLS(\n",
    "        t[[ind]],\n",
    "        sm.add_constant(t[['num']])\n",
    "    ).fit()\n",
    "    print(\"{}:\\t P-(num)={}\".format(ind[0], model.pvalues['num']),end='')\n",
    "    if model.pvalues['num']<0.01: print(\"***\")\n",
    "    elif model.pvalues['num']>=0.01 and model.pvalues['num']<0.05: print(\"**\")\n",
    "    elif model.pvalues['num']>=0.05 and model.pvalues['num']<0.1: print(\"*\")\n",
    "    else: print()\n",
    "    \n",
    "print('\\n\\n检验政策相关性是否对收益率波动性有显著影响(无收益率滞后项)')\n",
    "for ind in ['A_Var',\n",
    "       'B_Var', 'C_Var', 'D_Var', 'E_Var', 'F_Var', 'G_Var', 'H_Var', 'I_Var',\n",
    "       'J_Var', 'K_Var', 'L_Var', 'M_Var', 'N_Var', 'O_Var', 'P_Var', 'Q_Var',\n",
    "       'R_Var', 'S_Var']:\n",
    "    t = (temp[[ind, 'concentration']]).copy()\n",
    "    t.dropna(inplace=True)\n",
    "    model = sm.OLS(\n",
    "        t[[ind]],\n",
    "        sm.add_constant(t[['concentration']])\n",
    "    ).fit()\n",
    "    print(\"{}:\\t P-(concentration)={}\".format(ind[0], model.pvalues['concentration']), end='')\n",
    "    if model.pvalues['concentration']<0.01: print(\"***\")\n",
    "    elif model.pvalues['concentration']>=0.01 and model.pvalues['concentration']<0.05: print(\"**\")\n",
    "    elif model.pvalues['concentration']>=0.05 and model.pvalues['concentration']<0.1: print(\"*\")\n",
    "    else: print()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "1b4f2faa",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "检验政策数量是否对收益率波动性有显著影响（有收益率滞后项）\n",
      "A:\t P-(num)=0.00980358688634728***\n",
      "B:\t P-(num)=0.03826318326714684**\n",
      "C:\t P-(num)=0.023305417632493927**\n",
      "D:\t P-(num)=0.07530342311286388*\n",
      "E:\t P-(num)=0.09483979343160491*\n",
      "F:\t P-(num)=0.047316532378112695**\n",
      "G:\t P-(num)=0.05107997597285389*\n",
      "H:\t P-(num)=0.00927431812886805***\n",
      "I:\t P-(num)=0.04801105910340023**\n",
      "J:\t P-(num)=0.1546310773860984\n",
      "K:\t P-(num)=0.03999049110520407**\n",
      "L:\t P-(num)=0.015726120251443324**\n",
      "M:\t P-(num)=0.07089818922711166*\n",
      "N:\t P-(num)=0.030305848098732376**\n",
      "O:\t P-(num)=0.0012114233537622078***\n",
      "P:\t P-(num)=0.2729982348661804\n",
      "Q:\t P-(num)=0.0689590271727551*\n",
      "R:\t P-(num)=0.09812555470166498*\n",
      "S:\t P-(num)=0.0328766719275919**\n",
      "\n",
      "\n",
      "检验政策相关性是否对收益率波动性有显著影响（有收益率滞后项）\n",
      "A:\t P-(concentration)=0.015554381763553109**\n",
      "B:\t P-(concentration)=0.013851414695729411**\n",
      "C:\t P-(concentration)=0.05044422885094121*\n",
      "D:\t P-(concentration)=0.05631031149084288*\n",
      "E:\t P-(concentration)=0.34465679542183014\n",
      "F:\t P-(concentration)=0.036100939778412**\n",
      "G:\t P-(concentration)=0.04425220757681773**\n",
      "H:\t P-(concentration)=0.06588840904540727*\n",
      "I:\t P-(concentration)=0.07454779914818069*\n",
      "J:\t P-(concentration)=0.41748183931239535\n",
      "K:\t P-(concentration)=0.14329734746351158\n",
      "L:\t P-(concentration)=0.05267158655524785*\n",
      "M:\t P-(concentration)=0.03765654581414322**\n",
      "N:\t P-(concentration)=0.03850313762922092**\n",
      "O:\t P-(concentration)=0.06916733493913879*\n",
      "P:\t P-(concentration)=0.7804502184338\n",
      "Q:\t P-(concentration)=0.3269042191112035\n",
      "R:\t P-(concentration)=0.36322272578710224\n",
      "S:\t P-(concentration)=0.024995677273817532**\n"
     ]
    }
   ],
   "source": [
    "temp = (pd.merge(var, concentration, left_on='datetime64',right_on='datetime64')\n",
    "        .pipe(lambda x: pd.merge(x,\n",
    "                                pd.DataFrame(policy_and_states.groupby('datetime64')['DocVec'].count()).rename(columns={'DocVec':'num'}),\n",
    "                                    left_on='datetime64',right_on='datetime64'\n",
    "                                ))\n",
    "       )\n",
    "# display(temp.head())\n",
    "print('检验政策数量是否对收益率波动性有显著影响（有收益率滞后项）')\n",
    "for ind in ['A_Var',\n",
    "       'B_Var', 'C_Var', 'D_Var', 'E_Var', 'F_Var', 'G_Var', 'H_Var', 'I_Var',\n",
    "       'J_Var', 'K_Var', 'L_Var', 'M_Var', 'N_Var', 'O_Var', 'P_Var', 'Q_Var',\n",
    "       'R_Var', 'S_Var']:\n",
    "    t = (temp[[ind, 'num']]).copy()\n",
    "    t.dropna(inplace=True)\n",
    "    model = sm.OLS(\n",
    "        t[[ind]][1:],\n",
    "        pd.concat([sm.add_constant(t[['num']]), t[[ind]].shift(1)],axis=1)[1:]\n",
    "    ).fit()\n",
    "    print(\"{}:\\t P-(num)={}\".format(ind[0], model.pvalues['num']),end='')\n",
    "    if model.pvalues['num']<0.01: print(\"***\")\n",
    "    elif model.pvalues['num']>=0.01 and model.pvalues['num']<0.05: print(\"**\")\n",
    "    elif model.pvalues['num']>=0.05 and model.pvalues['num']<0.1: print(\"*\")\n",
    "    else: print()\n",
    "    \n",
    "print('\\n\\n检验政策相关性是否对收益率波动性有显著影响（有收益率滞后项）')\n",
    "for ind in ['A_Var',\n",
    "       'B_Var', 'C_Var', 'D_Var', 'E_Var', 'F_Var', 'G_Var', 'H_Var', 'I_Var',\n",
    "       'J_Var', 'K_Var', 'L_Var', 'M_Var', 'N_Var', 'O_Var', 'P_Var', 'Q_Var',\n",
    "       'R_Var', 'S_Var']:\n",
    "    t = (temp[[ind, 'concentration']]).copy()\n",
    "    t.dropna(inplace=True)\n",
    "    model = sm.OLS(\n",
    "        t[[ind]][1:],\n",
    "        pd.concat([sm.add_constant(t[['concentration']]), t[[ind]].shift(1)],axis=1)[1:]\n",
    "    ).fit()\n",
    "    print(\"{}:\\t P-(concentration)={}\".format(ind[0], model.pvalues['concentration']), end='')\n",
    "    if model.pvalues['concentration']<0.01: print(\"***\")\n",
    "    elif model.pvalues['concentration']>=0.01 and model.pvalues['concentration']<0.05: print(\"**\")\n",
    "    elif model.pvalues['concentration']>=0.05 and model.pvalues['concentration']<0.1: print(\"*\")\n",
    "    else: print()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "b8da877c",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "检验政策相关性是否对收益率波动性有显著影响\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from scipy.stats import zscore\n",
    "\n",
    "alpha = 0.1\n",
    "\n",
    "temp = (pd.merge(var, concentration, left_on='datetime64',right_on='datetime64')\n",
    "        .pipe(lambda x: pd.merge(x,\n",
    "                                pd.DataFrame(policy_and_states.groupby('datetime64')['DocVec'].count()).rename(columns={'DocVec':'num'}),\n",
    "                                    left_on='datetime64',right_on='datetime64'\n",
    "                                ))\n",
    "       )\n",
    "\n",
    "\n",
    "print('检验政策相关性是否对收益率波动性有显著影响')\n",
    "fig, ax = plt.subplots(figsize=(10,5))\n",
    "\n",
    "for ind in ['A_Var',\n",
    "       'B_Var', 'C_Var', 'D_Var', 'E_Var', 'F_Var', 'G_Var', 'H_Var', 'I_Var',\n",
    "       'J_Var', 'K_Var', 'L_Var', 'M_Var', 'N_Var', 'O_Var', 'P_Var', 'Q_Var',\n",
    "       'R_Var', 'S_Var']:\n",
    "    t = (temp[[ind, 'concentration']]).copy()\n",
    "    t.dropna(inplace=True)\n",
    "    model = sm.OLS(\n",
    "        zscore(t[[ind]]),\n",
    "        sm.add_constant(zscore(t[['concentration']]))\n",
    "    ).fit()\n",
    "#     print(model.summary())\n",
    "    y_error = model.conf_int(alpha).loc['concentration',:].values.reshape((2,1))[1][0]\\\n",
    "                - model.params['concentration']\n",
    "    ax.errorbar(ind[0],\n",
    "                model.params['concentration'],\n",
    "                yerr=y_error,\n",
    "                fmt='o',\n",
    "                markersize=3.,\n",
    "                color='black',\n",
    "                lw=0.5\n",
    "               )\n",
    "ax.yaxis.set_major_locator(plt.MultipleLocator(0.05))\n",
    "# plt.legend(bbox_to_anchor=(1.05, 0.6), loc=3, borderaxespad=0)\n",
    "ax.set_xlabel('行业')\n",
    "ax.set_ylabel('回归系数($\\phi$)及置信区间')\n",
    "# ax.set_title('收益率波动性对政策相关性回归结果\\n '+r'$\\alpha={}$'.format(alpha))\n",
    "ax.axhline(0,color='black')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "67064f19",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "检验政策数量是否对收益率波动性有显著影响\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from scipy.stats import zscore\n",
    "\n",
    "alpha = 0.1\n",
    "\n",
    "temp = (pd.merge(var, concentration, left_on='datetime64',right_on='datetime64')\n",
    "        .pipe(lambda x: pd.merge(x,\n",
    "                                pd.DataFrame(policy_and_states.groupby('datetime64')['DocVec'].count()).rename(columns={'DocVec':'num'}),\n",
    "                                    left_on='datetime64',right_on='datetime64'\n",
    "                                ))\n",
    "       )\n",
    "# display(temp.head())\n",
    "print('检验政策数量是否对收益率波动性有显著影响')\n",
    "\n",
    "fig, ax = plt.subplots(figsize=(10,5))\n",
    "for ind in ['A_Var',\n",
    "       'B_Var', 'C_Var', 'D_Var', 'E_Var', 'F_Var', 'G_Var', 'H_Var', 'I_Var',\n",
    "       'J_Var', 'K_Var', 'L_Var', 'M_Var', 'N_Var', 'O_Var', 'P_Var', 'Q_Var',\n",
    "       'R_Var', 'S_Var']:\n",
    "    t = (temp[[ind, 'num']]).copy()\n",
    "    t.dropna(inplace=True)\n",
    "    model = sm.OLS(\n",
    "        zscore(t[[ind]]),\n",
    "        sm.add_constant(zscore(t[['num']]))\n",
    "    ).fit()\n",
    "    y_error = model.conf_int(alpha).loc['num',:].values.reshape((2,1))[1][0]\\\n",
    "                - model.params['num']\n",
    "    ax.errorbar(ind[0],\n",
    "                model.params['num'],\n",
    "                yerr=y_error,\n",
    "                fmt='o',\n",
    "                markersize=3.,\n",
    "                color='black',\n",
    "                lw=0.5\n",
    "               )\n",
    "ax.yaxis.set_major_locator(plt.MultipleLocator(0.05))\n",
    "# plt.legend(bbox_to_anchor=(1.05, 0.6), loc=3, borderaxespad=0)\n",
    "ax.set_xlabel('行业')\n",
    "ax.set_ylabel(r'回归系数($\\beta$)及置信区间')\n",
    "# ax.set_title('收益率波动性对政策数量回归结果\\n '+r'$\\alpha={}$'.format(alpha))\n",
    "ax.axhline(0,color='black')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "156409e0",
   "metadata": {},
   "source": [
    "# 收益率分解视角"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "c2bcdeca",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "63071\n",
      "['000001' '000004' '000006' '000008' '000005' '000016' '000007' '000903'\n",
      " '000906' '000852' '000904' '000907' '000905']\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>滚动市盈率_PE_TTM</th>\n",
       "      <th>滚动股息率(%)_DYR_TTM</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2007</td>\n",
       "      <td>1</td>\n",
       "      <td>53.810177</td>\n",
       "      <td>0.713562</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2007</td>\n",
       "      <td>2</td>\n",
       "      <td>56.428487</td>\n",
       "      <td>0.646607</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2007</td>\n",
       "      <td>3</td>\n",
       "      <td>62.341268</td>\n",
       "      <td>0.531382</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2007</td>\n",
       "      <td>4</td>\n",
       "      <td>69.354281</td>\n",
       "      <td>0.426705</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2007</td>\n",
       "      <td>5</td>\n",
       "      <td>82.519839</td>\n",
       "      <td>0.367878</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Year  Month  滚动市盈率_PE_TTM  滚动股息率(%)_DYR_TTM\n",
       "0  2007      1     53.810177          0.713562\n",
       "1  2007      2     56.428487          0.646607\n",
       "2  2007      3     62.341268          0.531382\n",
       "3  2007      4     69.354281          0.426705\n",
       "4  2007      5     82.519839          0.367878"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "index_assetpricing = (pd.read_csv('/Users/yanyan/Documents/MyQuant/MarketSeparationBasedOnNLP/Code（毕业论文）/Data/指数估值指标.csv',usecols=[0,1,2,3])\n",
    "                      .assign(datetime64=lambda x: x[['交易日_TrdDt']].applymap(lambda x: np.datetime64(x)))\n",
    "                      .assign(Year = lambda x: x[['datetime64']].applymap(lambda y: y.year))\n",
    "                      .assign(Month = lambda x: x[['datetime64']].applymap(lambda y: y.month))\n",
    "                      .assign(IndexCode=lambda x: x[['指数代码_IdxCd']].applymap(lambda y: str(y).zfill(6)))\n",
    "                     )\n",
    "print(len(index_assetpricing))\n",
    "print((index_assetpricing['IndexCode']).unique())\n",
    "# index_assetpricing.head()\n",
    "index_000001 = index_assetpricing.loc[index_assetpricing['IndexCode']=='000905'][['Year','Month','滚动市盈率_PE_TTM','滚动股息率(%)_DYR_TTM']].groupby(['Year','Month']).mean()\n",
    "index_000001.reset_index(inplace=True)\n",
    "# index_000001['PE_t-1'] = index_000001['滚动市盈率_PE_TTM'].shift()\n",
    "# index_000001['DP_t-1'] = index_000001['滚动股息率(%)_DYR_TTM'].shift()\n",
    "# index_000001.dropna(inplace=True)\n",
    "index_000001.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "14635812",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>月无风险收益率_Monrfret</th>\n",
       "      <th>datetime64</th>\n",
       "      <th>general</th>\n",
       "      <th>InfoLevel1</th>\n",
       "      <th>InfoLevel2</th>\n",
       "      <th>InfoLevel3</th>\n",
       "      <th>滚动市盈率_PE_TTM</th>\n",
       "      <th>滚动股息率(%)_DYR_TTM</th>\n",
       "      <th>Return</th>\n",
       "      <th>Return_next</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2007</td>\n",
       "      <td>12</td>\n",
       "      <td>0.003643</td>\n",
       "      <td>2007-12-31</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>64.700920</td>\n",
       "      <td>0.395785</td>\n",
       "      <td>0.077068</td>\n",
       "      <td>-0.172412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2008</td>\n",
       "      <td>1</td>\n",
       "      <td>0.003731</td>\n",
       "      <td>2008-01-31</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>68.665886</td>\n",
       "      <td>0.360732</td>\n",
       "      <td>-0.172412</td>\n",
       "      <td>0.002675</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2008</td>\n",
       "      <td>2</td>\n",
       "      <td>0.003753</td>\n",
       "      <td>2008-02-29</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>64.111413</td>\n",
       "      <td>0.373481</td>\n",
       "      <td>0.002675</td>\n",
       "      <td>-0.221303</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2008</td>\n",
       "      <td>3</td>\n",
       "      <td>0.003751</td>\n",
       "      <td>2008-03-31</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>57.920252</td>\n",
       "      <td>0.400243</td>\n",
       "      <td>-0.221303</td>\n",
       "      <td>0.105575</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2008</td>\n",
       "      <td>4</td>\n",
       "      <td>0.003745</td>\n",
       "      <td>2008-04-30</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>43.381076</td>\n",
       "      <td>0.511567</td>\n",
       "      <td>0.105575</td>\n",
       "      <td>-0.090862</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>2022</td>\n",
       "      <td>12</td>\n",
       "      <td>0.001931</td>\n",
       "      <td>2022-12-31</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23.174759</td>\n",
       "      <td>1.848714</td>\n",
       "      <td>-0.026007</td>\n",
       "      <td>0.042679</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>2023</td>\n",
       "      <td>1</td>\n",
       "      <td>0.001973</td>\n",
       "      <td>2023-01-31</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23.451250</td>\n",
       "      <td>1.802219</td>\n",
       "      <td>0.042679</td>\n",
       "      <td>-0.003604</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>182</th>\n",
       "      <td>2023</td>\n",
       "      <td>2</td>\n",
       "      <td>0.001986</td>\n",
       "      <td>2023-02-28</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>24.393565</td>\n",
       "      <td>1.732375</td>\n",
       "      <td>-0.003604</td>\n",
       "      <td>-0.013963</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>2023</td>\n",
       "      <td>3</td>\n",
       "      <td>0.002042</td>\n",
       "      <td>2023-03-31</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23.920474</td>\n",
       "      <td>1.745374</td>\n",
       "      <td>-0.013963</td>\n",
       "      <td>0.006133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>184</th>\n",
       "      <td>2023</td>\n",
       "      <td>4</td>\n",
       "      <td>0.002021</td>\n",
       "      <td>2023-04-30</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>24.038300</td>\n",
       "      <td>1.723800</td>\n",
       "      <td>0.006133</td>\n",
       "      <td>-0.045473</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>185 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Year  Month  月无风险收益率_Monrfret datetime64  general  InfoLevel1  \\\n",
       "0    2007     12          0.003643 2007-12-31      1.0         0.0   \n",
       "1    2008      1          0.003731 2008-01-31      1.0         0.0   \n",
       "2    2008      2          0.003753 2008-02-29      1.0         0.0   \n",
       "3    2008      3          0.003751 2008-03-31      1.0         0.0   \n",
       "4    2008      4          0.003745 2008-04-30      1.0         0.0   \n",
       "..    ...    ...               ...        ...      ...         ...   \n",
       "180  2022     12          0.001931 2022-12-31      0.0         0.0   \n",
       "181  2023      1          0.001973 2023-01-31      0.0         0.0   \n",
       "182  2023      2          0.001986 2023-02-28      0.0         1.0   \n",
       "183  2023      3          0.002042 2023-03-31      0.0         1.0   \n",
       "184  2023      4          0.002021 2023-04-30      0.0         1.0   \n",
       "\n",
       "     InfoLevel2  InfoLevel3  滚动市盈率_PE_TTM  滚动股息率(%)_DYR_TTM    Return  \\\n",
       "0           1.0         0.0     64.700920          0.395785  0.077068   \n",
       "1           1.0         1.0     68.665886          0.360732 -0.172412   \n",
       "2           1.0         1.0     64.111413          0.373481  0.002675   \n",
       "3           1.0         1.0     57.920252          0.400243 -0.221303   \n",
       "4           1.0         1.0     43.381076          0.511567  0.105575   \n",
       "..          ...         ...           ...               ...       ...   \n",
       "180         0.0         0.0     23.174759          1.848714 -0.026007   \n",
       "181         0.0         0.0     23.451250          1.802219  0.042679   \n",
       "182         0.0         0.0     24.393565          1.732375 -0.003604   \n",
       "183         0.0         0.0     23.920474          1.745374 -0.013963   \n",
       "184         0.0         0.0     24.038300          1.723800  0.006133   \n",
       "\n",
       "     Return_next  \n",
       "0      -0.172412  \n",
       "1       0.002675  \n",
       "2      -0.221303  \n",
       "3       0.105575  \n",
       "4      -0.090862  \n",
       "..           ...  \n",
       "180     0.042679  \n",
       "181    -0.003604  \n",
       "182    -0.013963  \n",
       "183     0.006133  \n",
       "184    -0.045473  \n",
       "\n",
       "[185 rows x 12 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "index_ret_000001 = (pd.read_csv('/Users/yanyan/Documents/MyQuant/MarketSeparationBasedOnNLP/Code（毕业论文）/Data/指数收益率(000001).csv')\n",
    "                      .assign(datetime64=lambda x: x[['交易日期_TrdDt']].applymap(lambda x: np.datetime64(x)))\n",
    "                      .assign(Year = lambda x: x[['datetime64']].applymap(lambda y: y.year))\n",
    "                      .assign(Month = lambda x: x[['datetime64']].applymap(lambda y: y.month))\n",
    "                      .assign(IndexCode=lambda x: x[['指数代码_IdxCd']].applymap(lambda y: str(y).zfill(6)))\n",
    "                      .pipe(lambda x: x[['Year','Month','收盘价(元/点)_ClPr']].groupby(['Year','Month']).apply(lambda x: x.iloc[-1]/x.iloc[0]-1)['收盘价(元/点)_ClPr'])\n",
    "                      .pipe(lambda x: pd.DataFrame(x))\n",
    "                      .rename(columns={'收盘价(元/点)_ClPr':'Return'})\n",
    "#                       .assign(Return_next = lambda x: x['Return'].shift(-1))\n",
    "#                       .dropna()\n",
    "                   )\n",
    "\n",
    "index_000001_ret_and_pricing = pd.merge(index_000001, index_ret_000001, left_on=['Year','Month'], right_index=True)\n",
    "index_000001_ret_and_pricing = pd.merge(states, index_000001_ret_and_pricing, left_on=['Year','Month'], right_on=['Year','Month'])\n",
    "index_000001_ret_and_pricing = (\n",
    "    index_000001_ret_and_pricing\n",
    "    .assign(general = lambda x: x['general']-1)\n",
    "    .assign(InfoLevel1 = lambda x: x['InfoLevel1']-1)\n",
    "    .assign(InfoLevel2 = lambda x: x['InfoLevel2']-1)\n",
    "    .assign(InfoLevel3 = lambda x: x['InfoLevel3']-1)\n",
    "#     .assign(InfoLevel4 = lambda x: x['InfoLevel4']-1)\n",
    ")\n",
    "\n",
    "\n",
    "\n",
    "riskfree_ret = (\n",
    "    evaluator.Return[['月无风险收益率_Monrfret','datetime64']].drop_duplicates().ffill()\n",
    "    .assign(Year = lambda x: x[['datetime64']].applymap(lambda y: y.year))\n",
    "    .assign(Month = lambda x: x[['datetime64']].applymap(lambda y: y.month))\n",
    "    .pipe(lambda x: x[['月无风险收益率_Monrfret','Year','Month']])\n",
    "    .pipe(lambda x: x.groupby(['Year','Month'])['月无风险收益率_Monrfret'].last().reset_index())\n",
    ")\n",
    "\n",
    "index_000001_ret_and_pricing = (pd.merge(riskfree_ret, index_000001_ret_and_pricing, left_on=['Year','Month'], right_on=['Year','Month'])\n",
    "                                .assign(Return = lambda x: x['Return']-x['月无风险收益率_Monrfret'])\n",
    "                                .assign(Return_next = lambda x: x[['Return']].shift(-1))\n",
    "                                .pipe(lambda x: x.loc[x['Return']!=x['Return_next']])\n",
    "                                .dropna()\n",
    "                               )\n",
    "display(index_000001_ret_and_pricing)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "53c25b67",
   "metadata": {},
   "source": [
    "$$R_{t+1} = \\alpha S_t \\times D/P_{t} + \\beta D/P_{t} + \\gamma S_t + C + \\epsilon_t,\\quad $$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "aee9e436",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\\begin{tabular}{lrlrlrlrlr}\n",
      "\\toprule\n",
      "{} &  \\$\u0007lpha\\$ & alpha t-value &  \\$\beta\\$ & beta t-value &  \\$\\textbackslash gamma\\$ & gamma t-value &  const & const\\_t-value &  \\$Adj.R\\textasciicircum 2\\$ \\\\\n",
      "\\midrule\n",
      "general    &     8.79 &       3.85*** &    0.41 &         0.42 &    -11.04 &      -4.07*** &  -0.59 &         -0.47 &       5.83 \\\\\n",
      "InfoLevel1 &    -3.38 &         -1.55 &    3.29 &        1.91* &      3.22 &          1.39 &  -3.55 &       -1.98** &       0.60 \\\\\n",
      "InfoLevel2 &     8.72 &       3.52*** &    0.36 &         0.36 &    -11.14 &      -3.73*** &  -0.48 &         -0.38 &       6.29 \\\\\n",
      "InfoLevel3 &     4.47 &          1.63 &    1.05 &         0.76 &     -4.80 &        -1.67* &  -1.35 &         -0.75 &       1.10 \\\\\n",
      "\\bottomrule\n",
      "\\end{tabular}\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/7l/j9np0sbx1b33249mt44v25980000gn/T/ipykernel_76121/3817488070.py:44: FutureWarning: In future versions `DataFrame.to_latex` is expected to utilise the base implementation of `Styler.to_latex` for formatting and rendering. The arguments signature may therefore change. It is recommended instead to use `DataFrame.style.to_latex` which also contains additional functionality.\n",
      "  print(pd.DataFrame(res, index=['general','InfoLevel1','InfoLevel2','InfoLevel3',]).to_latex())\n"
     ]
    }
   ],
   "source": [
    "def pvalue2stars(x):\n",
    "    if x<0.01:\n",
    "        return '***'\n",
    "    elif x<0.05:\n",
    "        return \"**\"\n",
    "    elif x<0.1:\n",
    "        return \"*\"\n",
    "    else:\n",
    "        return ''\n",
    "\n",
    "res={\n",
    "    '$\\alpha$':[],\n",
    "    'alpha t-value':[],\n",
    "    '$\\beta$':[],\n",
    "    'beta t-value':[],\n",
    "    '$\\gamma$':[],\n",
    "    'gamma t-value':[],\n",
    "    'const':[],\n",
    "    'const_t-value':[],\n",
    "    '$Adj.R^2$':[]\n",
    "}\n",
    "\n",
    "for state in ['general','InfoLevel1','InfoLevel2','InfoLevel3',]:\n",
    "    model = sm.OLS(index_000001_ret_and_pricing['Return_next'],\n",
    "               sm.add_constant(pd.concat([\n",
    "                   index_000001_ret_and_pricing[state]*index_000001_ret_and_pricing['滚动股息率(%)_DYR_TTM'],\n",
    "                   index_000001_ret_and_pricing[[state,'滚动股息率(%)_DYR_TTM']]\n",
    "               ],axis=1))\n",
    "              ).fit(cov_type='HAC',cov_kwds={'maxlags':3})\n",
    "    res['$\\alpha$'].append((model.params[0]*100).round(2))\n",
    "    res['alpha t-value'].append(\"{}{}\".format(model.tvalues[0].round(2), pvalue2stars(model.pvalues[0])))\n",
    "\n",
    "    res['$\\beta$'].append((model.params['滚动股息率(%)_DYR_TTM']*100).round(2))\n",
    "    res['beta t-value'].append(\"{}{}\".format(model.tvalues['滚动股息率(%)_DYR_TTM'].round(2), pvalue2stars(model.pvalues['滚动股息率(%)_DYR_TTM'])))\n",
    "    \n",
    "    res['$\\gamma$'].append((model.params[state]*100).round(2))\n",
    "    res['gamma t-value'].append(\"{}{}\".format(model.tvalues[state].round(2), pvalue2stars(model.pvalues[state])))\n",
    "\n",
    "    res['const'].append((model.params['const']*100).round(2))\n",
    "    res['const_t-value'].append(\"{}{}\".format(model.tvalues['const'].round(2), pvalue2stars(model.pvalues['const'])))\n",
    "    \n",
    "    res['$Adj.R^2$'].append((model.rsquared_adj*100).round(2))\n",
    "\n",
    "print(pd.DataFrame(res, index=['general','InfoLevel1','InfoLevel2','InfoLevel3',]).to_latex())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "c0c9976b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\\begin{tabular}{lrlrlrlrlr}\n",
      "\\toprule\n",
      "{} &  \\$\u0007lpha\\$ & alpha t-value &  \\$\beta\\$ & beta t-value &  \\$\\textbackslash gamma\\$ & gamma t-value &  const & const\\_t-value &  \\$Adj.R\\textasciicircum 2\\$ \\\\\n",
      "\\midrule\n",
      "general    &    -0.23 &      -4.03*** &   -0.01 &        -0.39 &      5.33 &        2.8*** &   0.19 &          0.17 &       5.98 \\\\\n",
      "InfoLevel1 &     0.11 &          1.49 &   -0.07 &       -1.66* &     -3.55 &          -1.4 &   1.92 &          1.16 &       0.27 \\\\\n",
      "InfoLevel2 &    -0.16 &       -2.24** &   -0.00 &        -0.02 &      3.31 &          1.47 &  -0.10 &         -0.09 &       4.43 \\\\\n",
      "InfoLevel3 &    -0.03 &         -0.55 &   -0.03 &        -0.61 &     -0.00 &          -0.0 &   0.72 &          0.46 &       0.39 \\\\\n",
      "\\bottomrule\n",
      "\\end{tabular}\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/7l/j9np0sbx1b33249mt44v25980000gn/T/ipykernel_76121/673904422.py:34: FutureWarning: In future versions `DataFrame.to_latex` is expected to utilise the base implementation of `Styler.to_latex` for formatting and rendering. The arguments signature may therefore change. It is recommended instead to use `DataFrame.style.to_latex` which also contains additional functionality.\n",
      "  print(pd.DataFrame(res, index=['general','InfoLevel1','InfoLevel2','InfoLevel3',]).to_latex())\n"
     ]
    }
   ],
   "source": [
    "res={\n",
    "    '$\\alpha$':[],\n",
    "    'alpha t-value':[],\n",
    "    '$\\beta$':[],\n",
    "    'beta t-value':[],\n",
    "    '$\\gamma$':[],\n",
    "    'gamma t-value':[],\n",
    "    'const':[],\n",
    "    'const_t-value':[],\n",
    "    '$Adj.R^2$':[]\n",
    "}\n",
    "\n",
    "for state in ['general','InfoLevel1','InfoLevel2','InfoLevel3',]:\n",
    "    model = sm.OLS(index_000001_ret_and_pricing['Return_next'],\n",
    "               sm.add_constant(pd.concat([\n",
    "                   index_000001_ret_and_pricing[state]*index_000001_ret_and_pricing['滚动市盈率_PE_TTM'],\n",
    "                   index_000001_ret_and_pricing[[state,'滚动市盈率_PE_TTM']]\n",
    "               ],axis=1))\n",
    "              ).fit(cov_type='HAC',cov_kwds={'maxlags':3})\n",
    "    res['$\\alpha$'].append((model.params[0]*100).round(2))\n",
    "    res['alpha t-value'].append(\"{}{}\".format(model.tvalues[0].round(2), pvalue2stars(model.pvalues[0])))\n",
    "\n",
    "    res['$\\beta$'].append((model.params['滚动市盈率_PE_TTM']*100).round(2))\n",
    "    res['beta t-value'].append(\"{}{}\".format(model.tvalues['滚动市盈率_PE_TTM'].round(2), pvalue2stars(model.pvalues['滚动市盈率_PE_TTM'])))\n",
    "    \n",
    "    res['$\\gamma$'].append((model.params[state]*100).round(2))\n",
    "    res['gamma t-value'].append(\"{}{}\".format(model.tvalues[state].round(2), pvalue2stars(model.pvalues[state])))\n",
    "\n",
    "    res['const'].append((model.params['const']*100).round(2))\n",
    "    res['const_t-value'].append(\"{}{}\".format(model.tvalues['const'].round(2), pvalue2stars(model.pvalues['const'])))\n",
    "    \n",
    "    res['$Adj.R^2$'].append((model.rsquared_adj*100).round(2))\n",
    "\n",
    "print(pd.DataFrame(res, index=['general','InfoLevel1','InfoLevel2','InfoLevel3',]).to_latex())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f69aff44",
   "metadata": {},
   "source": [
    "# 不同级别的政策文本有啥区别？"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "b90a7878",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>信息级别_InfoLevel</th>\n",
       "      <th>DocVec</th>\n",
       "      <th>InfoPublYear</th>\n",
       "      <th>InfoPublMon</th>\n",
       "      <th>InfoPublDateNP</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>[1.8189353, -0.99140006, -0.91159874, 0.259773...</td>\n",
       "      <td>2021</td>\n",
       "      <td>4</td>\n",
       "      <td>2021-04-02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3</td>\n",
       "      <td>[2.905848, -1.8028907, -1.692163, -3.5323133, ...</td>\n",
       "      <td>2021</td>\n",
       "      <td>8</td>\n",
       "      <td>2021-08-18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>[1.9417651, 0.04977103, -0.17706038, -2.936079...</td>\n",
       "      <td>2021</td>\n",
       "      <td>9</td>\n",
       "      <td>2021-09-25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>[3.7902684, -0.58327883, -1.7856845, -3.603404...</td>\n",
       "      <td>2021</td>\n",
       "      <td>12</td>\n",
       "      <td>2021-12-24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "      <td>[4.3937197, -1.8425262, -1.6384861, -3.6826289...</td>\n",
       "      <td>2022</td>\n",
       "      <td>1</td>\n",
       "      <td>2022-01-10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   信息级别_InfoLevel                                             DocVec  \\\n",
       "0               2  [1.8189353, -0.99140006, -0.91159874, 0.259773...   \n",
       "1               3  [2.905848, -1.8028907, -1.692163, -3.5323133, ...   \n",
       "2               2  [1.9417651, 0.04977103, -0.17706038, -2.936079...   \n",
       "3               2  [3.7902684, -0.58327883, -1.7856845, -3.603404...   \n",
       "4               3  [4.3937197, -1.8425262, -1.6384861, -3.6826289...   \n",
       "\n",
       "   InfoPublYear  InfoPublMon InfoPublDateNP  \n",
       "0          2021            4     2021-04-02  \n",
       "1          2021            8     2021-08-18  \n",
       "2          2021            9     2021-09-25  \n",
       "3          2021           12     2021-12-24  \n",
       "4          2022            1     2022-01-10  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "temp = Industry_policy[['信息级别_InfoLevel','DocVec','InfoPublYear','InfoPublMon','InfoPublDateNP']]\n",
    "display(temp.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "53658fa3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>月无风险收益率_Monrfret</th>\n",
       "      <th>datetime64</th>\n",
       "      <th>general</th>\n",
       "      <th>InfoLevel1</th>\n",
       "      <th>InfoLevel2</th>\n",
       "      <th>InfoLevel3</th>\n",
       "      <th>滚动市盈率_PE_TTM</th>\n",
       "      <th>滚动股息率(%)_DYR_TTM</th>\n",
       "      <th>Return</th>\n",
       "      <th>Return_next</th>\n",
       "      <th>Return_next2</th>\n",
       "      <th>Return_next3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2007</td>\n",
       "      <td>12</td>\n",
       "      <td>0.003643</td>\n",
       "      <td>2007-12-31</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>64.700920</td>\n",
       "      <td>0.395785</td>\n",
       "      <td>0.182758</td>\n",
       "      <td>-0.093607</td>\n",
       "      <td>0.131024</td>\n",
       "      <td>-0.230165</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2008</td>\n",
       "      <td>1</td>\n",
       "      <td>0.003731</td>\n",
       "      <td>2008-01-31</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>68.665886</td>\n",
       "      <td>0.360732</td>\n",
       "      <td>-0.093607</td>\n",
       "      <td>0.131024</td>\n",
       "      <td>-0.230165</td>\n",
       "      <td>0.049951</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2008</td>\n",
       "      <td>2</td>\n",
       "      <td>0.003753</td>\n",
       "      <td>2008-02-29</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>64.111413</td>\n",
       "      <td>0.373481</td>\n",
       "      <td>0.131024</td>\n",
       "      <td>-0.230165</td>\n",
       "      <td>0.049951</td>\n",
       "      <td>-0.074168</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2008</td>\n",
       "      <td>3</td>\n",
       "      <td>0.003751</td>\n",
       "      <td>2008-03-31</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>57.920252</td>\n",
       "      <td>0.400243</td>\n",
       "      <td>-0.230165</td>\n",
       "      <td>0.049951</td>\n",
       "      <td>-0.074168</td>\n",
       "      <td>-0.260965</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2008</td>\n",
       "      <td>4</td>\n",
       "      <td>0.003745</td>\n",
       "      <td>2008-04-30</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>43.381076</td>\n",
       "      <td>0.511567</td>\n",
       "      <td>0.049951</td>\n",
       "      <td>-0.074168</td>\n",
       "      <td>-0.260965</td>\n",
       "      <td>-0.035988</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Year  Month  月无风险收益率_Monrfret datetime64  general  InfoLevel1  InfoLevel2  \\\n",
       "0  2007     12          0.003643 2007-12-31      1.0         0.0         1.0   \n",
       "1  2008      1          0.003731 2008-01-31      1.0         0.0         1.0   \n",
       "2  2008      2          0.003753 2008-02-29      1.0         0.0         1.0   \n",
       "3  2008      3          0.003751 2008-03-31      1.0         0.0         1.0   \n",
       "4  2008      4          0.003745 2008-04-30      1.0         0.0         1.0   \n",
       "\n",
       "   InfoLevel3  滚动市盈率_PE_TTM  滚动股息率(%)_DYR_TTM    Return  Return_next  \\\n",
       "0         0.0     64.700920          0.395785  0.182758    -0.093607   \n",
       "1         1.0     68.665886          0.360732 -0.093607     0.131024   \n",
       "2         1.0     64.111413          0.373481  0.131024    -0.230165   \n",
       "3         1.0     57.920252          0.400243 -0.230165     0.049951   \n",
       "4         1.0     43.381076          0.511567  0.049951    -0.074168   \n",
       "\n",
       "   Return_next2  Return_next3  \n",
       "0      0.131024     -0.230165  \n",
       "1     -0.230165      0.049951  \n",
       "2      0.049951     -0.074168  \n",
       "3     -0.074168     -0.260965  \n",
       "4     -0.260965     -0.035988  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def recursive_corr(arr):\n",
    "    corr_list = []\n",
    "    for i in range(len(arr)):\n",
    "        for j in range(i,len(arr)):\n",
    "            corr_list.append(np.corrcoef(arr[i],arr[j]))\n",
    "    return np.mean(corr_list)\n",
    "\n",
    "index_ret_000001 = (pd.read_csv('/Users/yanyan/Documents/MyQuant/MarketSeparationBasedOnNLP/Code（毕业论文）/Data/指数收益率（000905）.csv')\n",
    "                      .assign(datetime64=lambda x: x[['交易日_TrdDt']].applymap(lambda x: np.datetime64(x)))\n",
    "                      .assign(Year = lambda x: x[['datetime64']].applymap(lambda y: y.year))\n",
    "                      .assign(Month = lambda x: x[['datetime64']].applymap(lambda y: y.month))\n",
    "                      .assign(IndexCode=lambda x: x[['指数代码_IdxCd']].applymap(lambda y: str(y).zfill(6)))\n",
    "                      .pipe(lambda x: x[['Year','Month','收盘价(元/点)_ClPr']].groupby(['Year','Month']).apply(lambda x: x.iloc[-1]/x.iloc[0]-1)['收盘价(元/点)_ClPr'])\n",
    "                      .pipe(lambda x: pd.DataFrame(x))\n",
    "                      .rename(columns={'收盘价(元/点)_ClPr':'Return'})\n",
    "                   )\n",
    "\n",
    "index_000001_ret_and_pricing = pd.merge(index_000001, index_ret_000001, left_on=['Year','Month'], right_index=True)\n",
    "index_000001_ret_and_pricing = pd.merge(states, index_000001_ret_and_pricing, left_on=['Year','Month'], right_on=['Year','Month'])\n",
    "index_000001_ret_and_pricing = (\n",
    "    index_000001_ret_and_pricing\n",
    "    .assign(general = lambda x: x['general']-1)\n",
    "    .assign(InfoLevel1 = lambda x: x['InfoLevel1']-1)\n",
    "    .assign(InfoLevel2 = lambda x: x['InfoLevel2']-1)\n",
    "    .assign(InfoLevel3 = lambda x: x['InfoLevel3']-1)\n",
    "#     .assign(InfoLevel4 = lambda x: x['InfoLevel4']-1)\n",
    ")\n",
    "\n",
    "riskfree_ret = (\n",
    "    evaluator.Return[['月无风险收益率_Monrfret','datetime64']].drop_duplicates().ffill()\n",
    "    .assign(Year = lambda x: x[['datetime64']].applymap(lambda y: y.year))\n",
    "    .assign(Month = lambda x: x[['datetime64']].applymap(lambda y: y.month))\n",
    "    .pipe(lambda x: x[['月无风险收益率_Monrfret','Year','Month']])\n",
    "    .pipe(lambda x: x.groupby(['Year','Month'])['月无风险收益率_Monrfret'].last().reset_index())\n",
    ")\n",
    "\n",
    "\n",
    "index_000001_ret_and_pricing = (pd.merge(riskfree_ret, index_000001_ret_and_pricing, left_on=['Year','Month'], right_on=['Year','Month'], how='right')\n",
    "#                                 .pipe(lambda x: display(x.head()))\n",
    "                                .assign(Return = lambda x: x['Return']-x['月无风险收益率_Monrfret'])\n",
    "                                .assign(Return_next = lambda x: x['Return'].shift(-1))\n",
    "#                                 .pipe(lambda x: x.loc[x['Return']!=x['Return_next']])\n",
    "                                .assign(Return_next2 = lambda x: x['Return'].shift(-2))\n",
    "                                .assign(Return_next3 = lambda x: x['Return'].shift(-3))\n",
    "                               )\n",
    "display(index_000001_ret_and_pricing.head(5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "3423c328",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InfoLevel</th>\n",
       "      <th>Return_period</th>\n",
       "      <th>Adj.R^2</th>\n",
       "      <th>F_stat</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Return</td>\n",
       "      <td>0.027670</td>\n",
       "      <td>0.3157590725936283</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Return_next</td>\n",
       "      <td>0.077949</td>\n",
       "      <td>0.8171717280204526</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>Return_next2</td>\n",
       "      <td>0.100999</td>\n",
       "      <td>1.8801874039870612*</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>Return_next3</td>\n",
       "      <td>0.063072</td>\n",
       "      <td>0.974987806470635</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>Return</td>\n",
       "      <td>0.051375</td>\n",
       "      <td>3.045618669342493***</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2</td>\n",
       "      <td>Return_next</td>\n",
       "      <td>0.022345</td>\n",
       "      <td>0.8042373701207325</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2</td>\n",
       "      <td>Return_next2</td>\n",
       "      <td>0.067996</td>\n",
       "      <td>3.813581397123798***</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2</td>\n",
       "      <td>Return_next3</td>\n",
       "      <td>0.078270</td>\n",
       "      <td>2.245026587595082**</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>3</td>\n",
       "      <td>Return</td>\n",
       "      <td>0.035521</td>\n",
       "      <td>1.2630411103818182</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>3</td>\n",
       "      <td>Return_next</td>\n",
       "      <td>0.023764</td>\n",
       "      <td>0.5761380680692472</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>3</td>\n",
       "      <td>Return_next2</td>\n",
       "      <td>0.033951</td>\n",
       "      <td>1.0962993646814971</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>3</td>\n",
       "      <td>Return_next3</td>\n",
       "      <td>0.085130</td>\n",
       "      <td>1.8226246993682156*</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>all</td>\n",
       "      <td>Return</td>\n",
       "      <td>0.032512</td>\n",
       "      <td>1.0114026140206382</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>all</td>\n",
       "      <td>Return_next</td>\n",
       "      <td>0.022645</td>\n",
       "      <td>0.5490095787816853</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>all</td>\n",
       "      <td>Return_next2</td>\n",
       "      <td>0.045019</td>\n",
       "      <td>1.5064205803162962</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>all</td>\n",
       "      <td>Return_next3</td>\n",
       "      <td>0.065060</td>\n",
       "      <td>1.3311041509712882</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   InfoLevel Return_period   Adj.R^2                F_stat\n",
       "0          1        Return  0.027670    0.3157590725936283\n",
       "1          1   Return_next  0.077949    0.8171717280204526\n",
       "2          1  Return_next2  0.100999   1.8801874039870612*\n",
       "3          1  Return_next3  0.063072     0.974987806470635\n",
       "4          2        Return  0.051375  3.045618669342493***\n",
       "5          2   Return_next  0.022345    0.8042373701207325\n",
       "6          2  Return_next2  0.067996  3.813581397123798***\n",
       "7          2  Return_next3  0.078270   2.245026587595082**\n",
       "8          3        Return  0.035521    1.2630411103818182\n",
       "9          3   Return_next  0.023764    0.5761380680692472\n",
       "10         3  Return_next2  0.033951    1.0962993646814971\n",
       "11         3  Return_next3  0.085130   1.8226246993682156*\n",
       "12       all        Return  0.032512    1.0114026140206382\n",
       "13       all   Return_next  0.022645    0.5490095787816853\n",
       "14       all  Return_next2  0.045019    1.5064205803162962\n",
       "15       all  Return_next3  0.065060    1.3311041509712882"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ret = index_000001_ret_and_pricing[['Year','Month','Return','Return_next', 'Return_next2','Return_next3']]\n",
    "\n",
    "regression_result = {\n",
    "    'InfoLevel':[],\n",
    "    'Return_period':[],\n",
    "    'Adj.R^2':[],\n",
    "    'F_stat':[]\n",
    "}\n",
    "\n",
    "for i in [1,2,3,'all']:\n",
    "    if i=='all':\n",
    "        policy_of_infolevel = temp\n",
    "    else:\n",
    "        policy_of_infolevel = temp.loc[temp['信息级别_InfoLevel']==i]\n",
    "    policy_of_infolevel = pd.merge(ret, policy_of_infolevel.groupby(['InfoPublYear','InfoPublMon'])['DocVec'].mean().reset_index(),\\\n",
    "                                   left_on=['Year','Month'], right_on=['InfoPublYear','InfoPublMon'])\n",
    "    policy_of_infolevel.dropna(inplace=True)\n",
    "    for y in ['Return','Return_next', 'Return_next2','Return_next3']:\n",
    "        model = sm.OLS(policy_of_infolevel[[y]].values, sm.add_constant(np.array([list(j) for i in policy_of_infolevel[['DocVec']].values for j in i]))).fit(cov_type='HAC',cov_kwds={'maxlags':3})\n",
    "        regression_result['Return_period'].append(y)\n",
    "        regression_result['InfoLevel'].append(i)\n",
    "        regression_result['Adj.R^2'].append(model.rsquared)\n",
    "        regression_result['F_stat'].append(\"{}{}\".format(model.fvalue, pvalue2stars(model.f_pvalue)))\n",
    "\n",
    "display(pd.DataFrame(regression_result))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9b9b4ab7",
   "metadata": {},
   "source": [
    "## 政策文本的持续性分析"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "a9b8d565",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InfoLevel</th>\n",
       "      <th>lag_1</th>\n",
       "      <th>lag_2</th>\n",
       "      <th>lag_3</th>\n",
       "      <th>lag_4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0.528000</td>\n",
       "      <td>0.513243</td>\n",
       "      <td>0.509057</td>\n",
       "      <td>0.504092</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>0.509146</td>\n",
       "      <td>0.495718</td>\n",
       "      <td>0.488046</td>\n",
       "      <td>0.484496</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>0.521309</td>\n",
       "      <td>0.504501</td>\n",
       "      <td>0.494830</td>\n",
       "      <td>0.492799</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>all</td>\n",
       "      <td>0.516330</td>\n",
       "      <td>0.502461</td>\n",
       "      <td>0.495943</td>\n",
       "      <td>0.489688</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  InfoLevel     lag_1     lag_2     lag_3     lag_4\n",
       "0         1  0.528000  0.513243  0.509057  0.504092\n",
       "1         2  0.509146  0.495718  0.488046  0.484496\n",
       "2         3  0.521309  0.504501  0.494830  0.492799\n",
       "3       all  0.516330  0.502461  0.495943  0.489688"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def corr_df(x, y, n):\n",
    "    res = []\n",
    "    for i in range(len(x)):\n",
    "        res.append(np.corrcoef(x.iloc[i], y.iloc[i])[0,1])\n",
    "    res.extend([np.nan for i in range(n)])\n",
    "    return res\n",
    "\n",
    "def corr_one_for_all(x,y,n):\n",
    "    xx = [i.tolist() for i in x]\n",
    "    print(xx)\n",
    "    \n",
    "res = {\n",
    "    'InfoLevel':[],\n",
    "    'lag_1':[],\n",
    "    'lag_2':[],\n",
    "    'lag_3':[],\n",
    "    'lag_4':[]\n",
    "}\n",
    "\n",
    "for i in [1,2,3,'all']:\n",
    "    if i=='all':\n",
    "        policy_of_infolevel = temp\n",
    "    else:\n",
    "        policy_of_infolevel = temp.loc[temp['信息级别_InfoLevel']==i]\n",
    "    policy_of_infolevel = (policy_of_infolevel.copy(deep=True)\n",
    "                           .sort_values(by='InfoPublDateNP')\n",
    "                           .assign(corr_next = lambda x: corr_df(x['DocVec'].iloc[:-1], x['DocVec'].shift(-1).iloc[:-1], 1))\n",
    "                           .assign(corr_next2 = lambda x: corr_df(x['DocVec'].iloc[:-2], x['DocVec'].shift(-2).iloc[:-2], 2))\n",
    "                           .assign(corr_next3 = lambda x: corr_df(x['DocVec'].iloc[:-3], x['DocVec'].shift(-3).iloc[:-3], 3))\n",
    "                           .assign(corr_next4 = lambda x: corr_df(x['DocVec'].iloc[:-4], x['DocVec'].shift(-4).iloc[:-4], 4))\n",
    "                          )\n",
    "#     display(policy_of_infolevel.head())\n",
    "    res['InfoLevel'].append(i)\n",
    "    res['lag_1'].append(np.nanmean(policy_of_infolevel['corr_next']))\n",
    "    res['lag_2'].append(np.nanmean(policy_of_infolevel['corr_next2']))\n",
    "    res['lag_3'].append(np.nanmean(policy_of_infolevel['corr_next3']))\n",
    "    res['lag_4'].append(np.nanmean(policy_of_infolevel['corr_next4']))\n",
    "    \n",
    "display(pd.DataFrame(res))\n",
    "pd.DataFrame(res).set_index('InfoLevel').T.plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "0f262353",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InfoLevel</th>\n",
       "      <th>lag_1</th>\n",
       "      <th>lag_2</th>\n",
       "      <th>lag_3</th>\n",
       "      <th>lag_4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0.528000</td>\n",
       "      <td>-2.794968</td>\n",
       "      <td>-3.587789</td>\n",
       "      <td>-4.528084</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>0.509146</td>\n",
       "      <td>-2.637305</td>\n",
       "      <td>-4.144204</td>\n",
       "      <td>-4.841374</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>0.521309</td>\n",
       "      <td>-3.224209</td>\n",
       "      <td>-5.079310</td>\n",
       "      <td>-5.469010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>all</td>\n",
       "      <td>0.516330</td>\n",
       "      <td>-2.685942</td>\n",
       "      <td>-3.948412</td>\n",
       "      <td>-5.159861</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  InfoLevel     lag_1     lag_2     lag_3     lag_4\n",
       "0         1  0.528000 -2.794968 -3.587789 -4.528084\n",
       "1         2  0.509146 -2.637305 -4.144204 -4.841374\n",
       "2         3  0.521309 -3.224209 -5.079310 -5.469010\n",
       "3       all  0.516330 -2.685942 -3.948412 -5.159861"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tem = pd.DataFrame(res)\n",
    "tem['lag_2'] = ((tem['lag_2']-tem['lag_1'])/tem['lag_1'])*100\n",
    "tem['lag_3'] = ((tem['lag_3']-tem['lag_1'])/tem['lag_1'])*100\n",
    "tem['lag_4'] = ((tem['lag_4']-tem['lag_1'])/tem['lag_1'])*100\n",
    "tem"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "5674dc95",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InfoLevel</th>\n",
       "      <th>lag_1</th>\n",
       "      <th>lag_2</th>\n",
       "      <th>lag_3</th>\n",
       "      <th>lag_4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0.432</td>\n",
       "      <td>0.406</td>\n",
       "      <td>0.4005</td>\n",
       "      <td>0.3905</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>0.3997</td>\n",
       "      <td>0.3817</td>\n",
       "      <td>0.3734</td>\n",
       "      <td>0.3665</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4156</td>\n",
       "      <td>0.3986</td>\n",
       "      <td>0.3983</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>all</td>\n",
       "      <td>0.4131</td>\n",
       "      <td>0.3949</td>\n",
       "      <td>0.3849</td>\n",
       "      <td>0.3772</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  InfoLevel   lag_1   lag_2   lag_3   lag_4\n",
       "0         1   0.432   0.406  0.4005  0.3905\n",
       "1         2  0.3997  0.3817  0.3734  0.3665\n",
       "2         3  0.4305  0.4156  0.3986  0.3983\n",
       "3       all  0.4131  0.3949  0.3849  0.3772"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import scipy\n",
    "\n",
    "def corr_one_for_all(x,y):\n",
    "    xx = [j for i in x for j in i]\n",
    "    yy = [j for i in y for j in i]\n",
    "    corr, pvalue = scipy.stats.pearsonr(xx,yy)\n",
    "    return \"{}\".format(np.round(corr, 4), pvalue2stars(pvalue))\n",
    "    \n",
    "res = {\n",
    "    'InfoLevel':[],\n",
    "    'lag_1':[],\n",
    "    'lag_2':[],\n",
    "    'lag_3':[],\n",
    "    'lag_4':[]\n",
    "}\n",
    "\n",
    "for i in [1,2,3,'all']:\n",
    "    if i=='all':\n",
    "        policy_of_infolevel = temp\n",
    "    else:\n",
    "        policy_of_infolevel = temp.loc[temp['信息级别_InfoLevel']==i]\n",
    "    policy_of_infolevel = (policy_of_infolevel.copy(deep=True)\n",
    "                           .sort_values(by='InfoPublDateNP')\n",
    "                           .assign(DocVec_next = lambda x: x['DocVec'].shift(-1))\n",
    "                           .assign(DocVec_next2 = lambda x: x['DocVec'].shift(-2))\n",
    "                           .assign(DocVec_next3 = lambda x: x['DocVec'].shift(-3))\n",
    "                           .assign(DocVec_next4 = lambda x: x['DocVec'].shift(-4))\n",
    "                           .dropna()\n",
    "                          )\n",
    "    res['InfoLevel'].append(i)\n",
    "    res['lag_1'].append(corr_one_for_all(policy_of_infolevel['DocVec'], policy_of_infolevel['DocVec_next']))\n",
    "    res['lag_2'].append(corr_one_for_all(policy_of_infolevel['DocVec'], policy_of_infolevel['DocVec_next2']))\n",
    "    res['lag_3'].append(corr_one_for_all(policy_of_infolevel['DocVec'], policy_of_infolevel['DocVec_next3']))\n",
    "    res['lag_4'].append(corr_one_for_all(policy_of_infolevel['DocVec'], policy_of_infolevel['DocVec_next4']))\n",
    "    \n",
    "display(pd.DataFrame(res))\n",
    "pd.DataFrame(res).set_index('InfoLevel').T.astype('float').plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2a8b86c7",
   "metadata": {},
   "source": [
    "### 不同级别政策文本的积极词语和消极词语的个数是否相差很多？"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "1659dbeb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['观测ID()_ID', '事件标志_EventFlg', '信息发布日期_InfoPubDt', '媒体出处代码()_MediaCd',\n",
       "       '媒体出处_Media', '撰写机构_Writer', '作者_Author', '信息内容_Content',\n",
       "       '信息对象代码()_ObjCd', '信息地域划分代码()_RegionCd', '涉及机构编码_InvInsCd',\n",
       "       '涉及机构名称_InvInsNm', '信息级别_InfoLevel', '省市编码_ProvNum', '省市名称_Prov',\n",
       "       '行业编码_IndNum', '行业板块_IndPla', '行业代码_IndCd', '行业名称_IndNm', '记录时间_RecDt',\n",
       "       'Unnamed: 20', 'ID', 'InfoPublDate', 'Media', 'MediaCode', 'Writer',\n",
       "       'Author', 'InfoTitle', 'Content', 'InfoPublDateNP', 'TokenContent',\n",
       "       'DocVec', 'InfoPublYear', 'InfoPublMon'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Industry_policy.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "b61ed691",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>信息级别_InfoLevel</th>\n",
       "      <th>TokenContent</th>\n",
       "      <th>pos_num</th>\n",
       "      <th>neg_num</th>\n",
       "      <th>pos_ratio</th>\n",
       "      <th>neg_ratio</th>\n",
       "      <th>sum_num</th>\n",
       "      <th>sum_ratio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>[小费, 阿姨, 小钟, 老师, 近期, 关注, 上市, 公司, 上市公司, 发布, 临时,...</td>\n",
       "      <td>30</td>\n",
       "      <td>8</td>\n",
       "      <td>0.069606</td>\n",
       "      <td>0.018561</td>\n",
       "      <td>38</td>\n",
       "      <td>0.088167</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3</td>\n",
       "      <td>[8, 月, 17, 日, 国家, 药品, 监督, 管理, 管理局, 国家药品监督管理局, ...</td>\n",
       "      <td>43</td>\n",
       "      <td>12</td>\n",
       "      <td>0.066052</td>\n",
       "      <td>0.018433</td>\n",
       "      <td>55</td>\n",
       "      <td>0.084485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>[中证网, 讯, 9, 月, 24, 日, 中国, 特钢, 企业, 协会, 发布, 符合, ...</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>0.040134</td>\n",
       "      <td>0.020067</td>\n",
       "      <td>18</td>\n",
       "      <td>0.060201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>[近日, 农业, 农村, 农村部, 制定, 印发, 十四, 四五, 十四五, 全国, 畜牧,...</td>\n",
       "      <td>49</td>\n",
       "      <td>12</td>\n",
       "      <td>0.076443</td>\n",
       "      <td>0.018721</td>\n",
       "      <td>61</td>\n",
       "      <td>0.095164</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "      <td>[近日, 农业, 农村, 农村部, 印发, 国家, 动物, 疫病, 强制, 免疫, 指导, ...</td>\n",
       "      <td>28</td>\n",
       "      <td>10</td>\n",
       "      <td>0.040876</td>\n",
       "      <td>0.014599</td>\n",
       "      <td>38</td>\n",
       "      <td>0.055474</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   信息级别_InfoLevel                                       TokenContent  pos_num  \\\n",
       "0               2  [小费, 阿姨, 小钟, 老师, 近期, 关注, 上市, 公司, 上市公司, 发布, 临时,...       30   \n",
       "1               3  [8, 月, 17, 日, 国家, 药品, 监督, 管理, 管理局, 国家药品监督管理局, ...       43   \n",
       "2               2  [中证网, 讯, 9, 月, 24, 日, 中国, 特钢, 企业, 协会, 发布, 符合, ...       12   \n",
       "3               2  [近日, 农业, 农村, 农村部, 制定, 印发, 十四, 四五, 十四五, 全国, 畜牧,...       49   \n",
       "4               3  [近日, 农业, 农村, 农村部, 印发, 国家, 动物, 疫病, 强制, 免疫, 指导, ...       28   \n",
       "\n",
       "   neg_num  pos_ratio  neg_ratio  sum_num  sum_ratio  \n",
       "0        8   0.069606   0.018561       38   0.088167  \n",
       "1       12   0.066052   0.018433       55   0.084485  \n",
       "2        6   0.040134   0.020067       18   0.060201  \n",
       "3       12   0.076443   0.018721       61   0.095164  \n",
       "4       10   0.040876   0.014599       38   0.055474  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "negative_words = set(pd.read_excel('/Users/yanyan/Downloads/中文金融情感词典_姜富伟等(2020).xlsx', sheet_name='negative').applymap(lambda x: x.strip())['Negative Word'])\n",
    "positive_words = set(pd.read_excel('/Users/yanyan/Downloads/中文金融情感词典_姜富伟等(2020).xlsx', sheet_name='positive').applymap(lambda x: x.strip())['Positive Word'])\n",
    "\n",
    "def count_feeling_num(token_list, words_set):\n",
    "    num=0\n",
    "    for i in token_list:\n",
    "        if i in words_set: num+=1\n",
    "    return num\n",
    "\n",
    "def count_feeling_ratio(token_list, words_set):\n",
    "    num=0\n",
    "    for i in token_list:\n",
    "        if i in words_set: num+=1\n",
    "    return num/len(token_list)\n",
    "\n",
    "count_feeling_df = (Industry_policy[['信息级别_InfoLevel','TokenContent']]\n",
    "                    .assign(pos_num = lambda x: x[['TokenContent']].applymap(lambda x: count_feeling_num(x, positive_words)))\n",
    "                    .assign(neg_num = lambda x: x[['TokenContent']].applymap(lambda x: count_feeling_num(x, negative_words)))\n",
    "                    .assign(pos_ratio = lambda x: x[['TokenContent']].applymap(lambda x: count_feeling_ratio(x, positive_words)))\n",
    "                    .assign(neg_ratio = lambda x: x[['TokenContent']].applymap(lambda x: count_feeling_ratio(x, negative_words)))\n",
    "                   )\n",
    "count_feeling_df['sum_num'] = count_feeling_df['pos_num']+count_feeling_df['neg_num']\n",
    "count_feeling_df['sum_ratio'] = count_feeling_df['pos_ratio']+count_feeling_df['neg_ratio']\n",
    "display(count_feeling_df.head())\n",
    "# display(count_feeling_df.groupby('信息级别_InfoLevel')[['pos_num','neg_num']].mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "5d55a978",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pos_num</th>\n",
       "      <th>neg_num</th>\n",
       "      <th>sum_num</th>\n",
       "      <th>pos_ratio</th>\n",
       "      <th>neg_ratio</th>\n",
       "      <th>sum_ratio</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>信息级别_InfoLevel</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>31.853775</td>\n",
       "      <td>18.426311</td>\n",
       "      <td>50.280086</td>\n",
       "      <td>0.058126</td>\n",
       "      <td>0.030958</td>\n",
       "      <td>0.089083</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>38.865112</td>\n",
       "      <td>13.658126</td>\n",
       "      <td>52.523238</td>\n",
       "      <td>0.074388</td>\n",
       "      <td>0.025836</td>\n",
       "      <td>0.100224</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>41.121262</td>\n",
       "      <td>13.673588</td>\n",
       "      <td>54.794850</td>\n",
       "      <td>0.077406</td>\n",
       "      <td>0.026480</td>\n",
       "      <td>0.103886</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  pos_num    neg_num    sum_num  pos_ratio  neg_ratio  \\\n",
       "信息级别_InfoLevel                                                          \n",
       "1               31.853775  18.426311  50.280086   0.058126   0.030958   \n",
       "2               38.865112  13.658126  52.523238   0.074388   0.025836   \n",
       "3               41.121262  13.673588  54.794850   0.077406   0.026480   \n",
       "\n",
       "                sum_ratio  \n",
       "信息级别_InfoLevel             \n",
       "1                0.089083  \n",
       "2                0.100224  \n",
       "3                0.103886  "
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "count_feeling_df.groupby('信息级别_InfoLevel')[['pos_num','neg_num','sum_num','pos_ratio','neg_ratio','sum_ratio']].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "473eff76",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1   2\t5.6980769482365215e-18\n",
      "1   3\t1.8132718929466654e-34\n",
      "2   3\t5.813068143133086e-14\n"
     ]
    }
   ],
   "source": [
    "from scipy.stats import ks_2samp\n",
    "for state_1 in range(1,4):\n",
    "    for state_2 in range(state_1,4):\n",
    "        if state_1==state_2: continue\n",
    "        print(state_1,' ',state_2, end='\\t')\n",
    "        print(\n",
    "            ks_2samp(\n",
    "                count_feeling_df.loc[count_feeling_df['信息级别_InfoLevel']==state_1]['sum_num'].values,\n",
    "                count_feeling_df.loc[count_feeling_df['信息级别_InfoLevel']==state_2]['sum_num'].values,\n",
    "            ).pvalue\n",
    "        )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "93a3df2d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1   2\t1.0164387328671217e-43\n",
      "1   3\t2.4489506853399438e-28\n",
      "2   3\t0.006656647095207517\n"
     ]
    }
   ],
   "source": [
    "from scipy.stats import ks_2samp\n",
    "for state_1 in range(1,4):\n",
    "    for state_2 in range(state_1,4):\n",
    "        if state_1==state_2: continue\n",
    "        print(state_1,' ',state_2, end='\\t')\n",
    "        print(\n",
    "            ks_2samp(\n",
    "                count_feeling_df.loc[count_feeling_df['信息级别_InfoLevel']==state_1]['sum_ratio'].values,\n",
    "                count_feeling_df.loc[count_feeling_df['信息级别_InfoLevel']==state_2]['sum_ratio'].values,\n",
    "            ).pvalue\n",
    "        )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5156e011",
   "metadata": {},
   "source": [
    "## ADF检验"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "ef8e1187",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n",
      "True\n",
      "True\n",
      "True\n",
      "False\n",
      "True\n",
      "True\n",
      "True\n",
      "True\n",
      "True\n",
      "True\n",
      "True\n",
      "True\n",
      "True\n",
      "True\n",
      "True\n",
      "True\n",
      "True\n",
      "True\n",
      "True\n",
      "True\n",
      "True\n",
      "True\n",
      "True\n",
      "True\n",
      "True\n",
      "True\n",
      "True\n",
      "True\n",
      "False\n"
     ]
    }
   ],
   "source": [
    "for j in range(1,4):\n",
    "    data = pd.read_csv('/Users/yanyan/Documents/MyQuant/MarketSeparationBasedOnNLP/Code（毕业论文）/Data/时间序列向量导出结果/DocVec_monthly_InfoLevel{}_20240207_cutted.csv'.format(j))\n",
    "    for i in range(10):\n",
    "        print(sm.tsa.stattools.adfuller(data[str(i)])[1]<0.01)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
